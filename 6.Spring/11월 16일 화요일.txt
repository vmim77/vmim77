11월 16일 수업

[웹 채팅]

var websocket = new WebSocket(연결하고자하는URL)
→ 연결하고자하는 웹소켓 서버 객체를 생성한다.

jsp에서 웹소켓 서버 객체로 메시지를 보내면 컨트롤러에서 받아서 처리해준다.
→ .send( )

controller에서 메시지를 보냈다면 jsp에서 .onmessage 이벤트로 처리를 한다.

▣ afterConnectionEstablished(WebSocketSession wsession) 메소드는 클라이언트가 웹소켓서버에 연결이 되어지면 자동으로 실행되는 메소드

▣ handleTextMessage(WebSocketSession wsession, TextMessage message) 메소드는 클라이언트가 웹소켓서버로 메시지를 전송했을 때 자동으로 호출되는(실행되는) 메소드이다.

→ 위의 메소드들은 부모클래스인 TextWebSocketHandler에 모두 있는 것들을 재정의한 것이다.
→ 첫번째 파라미터인 WebSocketSession wsession은 웹소켓 서버에 접속한 사용자의 정보, TextMessage message는 웹소켓 서버에서 보내진 메시지이다.

▶ VO에 해당하는 자바스크립트 객체를 jsp에서 JSON 표기법의 문자열로 변환하여 메시지를 보냈다. 이것을 컨트롤러에서 처리하려면 GSON을 이용하여 자바 형태의 객체로 역직렬화가 필요하다.
→ MessageVO의 convertMessage( ) 메소드

public static MessageVO convertMessage(String source) {
		
   MessageVO messagevo = new MessageVO();
   Gson gson = new Gson();
		
   messagevo = gson.fromJson(source, MessageVO.class);
   // JSON 모양을 띄는 String 타입을 자바의 messagevo 객체 형태로 바꿔준다.
		
   return messagevo;	
}

→ toJson은 자바 → 자바스크립트
→ fromJson(JSON String, ~.class)은 자바스크립트 → 자바

■ WebsocketEchoHandler.java

MessageVO.convertMessage(message.getPayload());
→ jsp에서는 JSON 형태의 String으로 보냈지만, 컨트롤러에서 받을땐 TextMessage 형태로 받아오기 때문에 String으로 변환시켜야 한다. 
→ 그럴땐 TextMessage message.getPayload() 를 하면 String 으로 변환시켜준다.


▶ 이제 사용자가 입장하면 채팅방에 있는 다른 모든 사용자에게 입장했다는 메시지를 보내야한다.
→ 해당 자바클래스 파일에 필드를 보면 connectedUsers라고 List<WebSocketSession> 타입의 필드가 있는데 이곳에 현재 접속자들이 들어가있다.
→ 반복문으로 모든 접속자들에게 메시지를 보내면 된다.

컨트롤러에서 sendMessage로 메시지를 보내고, jsp에서는 onmessage 콜백함수에서 처리를 한다.

※ .scrollTop() 은 스크롤 막대의 위치를 설정할 때 사용한다.

▶ 사용자가 보내는 메시지내용은 정규식을 이용한 replace로 XSS 공격을 방지시켜야 한다.
var messageVal = $("input#message").val();
messageVal = messageVal.replace(/<script/gi, "&lt;script"); 

▶ 내가 보낸 메시지도 나한테 보여야 한다.


▶ 채팅방나가기를 누르면 웹소켓 연결 끊기
====================================================================================

[웹채팅 - 귓속말]

상대방의 이름을 누르면 

아이피 칸에 자동으로 그사람의 아이피값을 넣고, 누구랑 대화하는지도 표시한다. 이후에 메시지 보내기를 할 때 아이피값이 들어있는 인풋태그가 비어있지 않다면 messageObj.type, messageObj.to 도 변경시켜준다.




