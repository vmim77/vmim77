09월 28일 오전수업 

[ 코인충전 ]

■ coinPurchaseTypeChoice.jsp

로그인한 사용자가 자신의 코인을 충전하는 경우 위의 view페이지로 보내준다.
==> 세션에 저장된 로그인정보와 코인충전하기를 누르면서 GET 방식으로 보내진 아이디가 동일해야 한다.


1. 로그인페이지에서 코인충전 버튼 클릭
2. CoinPurchaseTypeChoiceAction.java 로 이동하는 팝업창 띄운다.
3. Action.java에서 조건에 맞는다면 View페이지로 이동시킨다.


▶ 선택한 금액에 CSS 효과주기 

라디오버튼을 클릭하면 옆에 있는 span 태그 point에 CSS 효과를 준다.
==> 라디오버튼과 span태그의 갯수는 똑같으며 서로 짝을 지어서 있다.
==> 즉 클릭한 라디오버튼의 index와 span 태그의 index는 서로 같다.

★ $(선택자).eq(0) 는 선택된 여러개의 요소들중에서 0번째 요소를 선택하는 것이다.
==>  $("td>span").eq(index) 은 배열중에서 특정 요소를 끄집어 오는 것으로 보면 된다

★ $(선택자).index(this); 는 여러개의 요소들중에서 이벤트가 발생한 요소의 인덱스 번호를 알려준다.

var index = $("input:radio[name=coinmoney]").index(this);
$("td>span").eq(index);
==> 이렇게 하면 라디오버튼을 클릭하면, 라디오버튼과 짝꿍인 span태그를 선택한다.

※ 선택된 것만 CSS효과를 줘야하니깐, 처음에는 전부다 CSS를 없애버린다.
==> 그 후에 선택된 것만 CSS를 준다.


▶ 금액을 선택하지 않고 '결제하기' 클릭하면 에러메시지를 출력한다.

$("td#purchase").hover(function(){}, function(){})

첫 번째 function은 mouseover,
두 번째 function은 mouseout

mouseover를 하면 .purchase 클래스를 줘서 CSS 효과를 준다.
mouseout을 하면 .purchase 클래스를 없앤다.

※ 체크됐는지 안되었는지는 radio의 길이로 파악하면 된다.
==> $("input:radio[name=coinmoney]:checked").length;

선택을 안했으면 0, 선택을 했다면 1

길이가 0인데 결제하기를 누르면 에러메시지를 출력시키고, 라디오버튼을 클릭하면 에러메시지를 hide( ) 시킨다.

▶ 결제금액을 선택하고 결제하기를 누르면 이제 전송시켜준다.

자식창(팝업창)은 그저 충전금액 선택만 시키게하고, 부모창(login.jsp)에서 선택된 금액으로 일처리를 해준다.

=== 팝업창에서 부모창 함수 호출 방법 3가지 ===
1-1. 일반적인 방법
opener.location.href = "javascript:부모창스크립트 함수명();";
                           
1-2. 일반적인 방법
window.opener.부모창스크립트 함수명();

2. jQuery를 이용한 방법
$(opener.location).attr("href", "javascript:부모창스크립트 함수명();");

▶ 즉, 팝업창에서 결제하기를 누르면 다시 login.jsp로 이동을 하여서 아임포트API가 실행되게 해준다.

opener.location.href = "javascript:goCoinPurchaseEnd();";
==> opener는 팝업창을 열은 애이다. (== 부모창)
==> 부모창의 위치로 가서 해당 함수를 실행시켜라

★ self.close(); 는 팝업창을 닫는 것이다.

얼만큼 결제할지를 받아서, 결제처리로 넘어가야 한다. 
==> 금액을 자식창에서 부모창으로 넘겨주자
==> $(opener.location).attr("href", "javascript:goCoinPurchaseEnd("+coinmoney+");");

coinmoney는 radio버튼을 클릭하면 그 value를 변수에 담은 것이다.

▶ goCoinPurchaseEnd( )에서는 다시 아임포트 결제 팝업창을 띄운다.
==> GET 방식으로 userid, coinmoney를 보내준다.
==> userid는 DB에서 해당 유저의 코인을 update 시켜주기 위함이다.

★ 로그아웃이 된 상태에서는 결제가 불가능하다. 또한 세션에 저장된 로그인정보와 현재 로그인한 사람의 정보가 일치해야한다.
==> 즉 로그인되어진 사람의 userid값을 넘겨야 한다.

※ loginAction에서 session에 로그인한 사람의 정보를 DB에서 가져와서 넣어준다 --> 로그인이 되어야 코인충전 버튼 사용가능

■ CoinPurchaseEndAction.java

로그인을 했는지, 로그인된 사람과 get으로 넘어온 사람이 똑같은지를 확인한다.

▶ 결제창에서 결제결과를 고지해주기 위해서는 결제금액, 결제자, 결제자 이메일, 결제자 핸드폰번호가 필요하다. ---- 결제종료

▶ 또한, 끝나면 DB에서 금액만큼 Update가 이뤄져야 한다. -- where절에 쓸 userid가 필요하다.

coinmoney와 userid는 GET방식으로 전송되니 가져와서 사용한다.
email과 name, mobile은 로그인한 유저의 정보를 세션에서 꺼내와서 사용한다.
==> 이제 이 정보를 view 페이지로 전송시킨다.

■ paymentGateway.jsp

IAMPORT사에서 제공해주는 오픈 API이다.

※ https://www.iamport.kr/ 페이지를 참조할 것

※ 추후 세미프로젝트에서는 IMP.request_pay( ) 에서 name 컬럼에는 제품명이 들어와야한다.
==> request로 제품명까지 받아와서 넘겨야한다.

pg - 결제방식 PG사 구분
pay_method - 결제 수단
merchant_uid - 가맹점에서 생성/관리하는 고유 주문번호
name - 주문명 혹은 주문번호 
amount - 결제금액 Number 타입, 필수항목 ★ // 원래는 ${requestScope.coinmoney} 가 들어와야 한다. 
buyer_email - 구매자 email
buyer_name - 구매자 이름
buyer_tel -  구매자 전화번호(필수항목)

★ 오픈 API라 실제 결제처리는 아임포트에서 다 해준다.
==> 결제가 성공하면 콜백함수가 호출된다.

데스크톱이면 콜백함수로 후처리를하고, 모바일이면 URL을 만들어서 후처리를 한다.

■ login.jsp

결제성공시 콜백함수에서 다시 login.jsp의 DB 코인액을 update 해주는 함수를 호출시킨다.
==> goCoinUpdate('${requestScope.userid}','${requestScope.coinmoney}');

login.jsp 하단부에 Action으로 값을 전송시키기위한 hidden 폼태그를 하나 만든다.

userid와 coinmoney를 Action으로 전송한다.

※ 개인정보이니 POST로 전송

■ CoinUpdateLoginUserAction.java

DAO 객체 생성하고, tbl_member에서 해당 userid의 코인액을 갱신한다.

int n = mdao.coinUpdate(paraMap); 

★ 항상 함수를 호출시키고 먼저 console.log나 alert로 호출이 제대로 되는지 확인하고 개발을 해야한다.

★ 결제한 금액이 반영이 안되는 이유는?

로그인을 할 때 DB에서 해당 회원의 정보를 조회해오기 때문에 로그인을 다시해야 결제한 금액이 반영된다.
==> 그래서 결제를 할 때마다 회원정보를 다시 조회해와야 한다.

▶ update 메소드가 성공적으로 실행됐다면(n==1), 세션의 값을 다시 바꿔줘야 한다.

MemberVO loginuser = (MemberVO) session.getAttribute("loginuser");
loginuser.setCoin(loginuser.getCoin() + coinmoney);
loginuser.setPoint(loginuser.getPoint() + (int)(Integer.parseInt(coinmoney) * 0.01));

◆ loginuser 자체가 session의 저장된 loginuser 값을 가리키고 있다. ( 메모리 주소 )

====================================================================================

오후수업

▶ 09/28 view 페이지 먼저 만들기

-----------------------------------------------------------------------------------------
세미프로젝트 - 쇼핑몰 만들기
-----------------------------------------------------------------------------------------
1단계
-----------------------------------------------------------------------------------------
▶ 팀장 뽑기: 송동준 님

▶ 주제 정하기: 신발 - 남성구두

▶ 벤치마킹 사이트 잡기
- 로맨틱무브 (http://romanticmove.com)
- 탬플릿      (https://themewagon.com/themes/free-bootstrap-4-html5-e-commerce-website-template-liquorstore/)

▶ 도움되는 사이트
- 미리캔버스 (https://www.miricanvas.com/)

▶ 업무 분담 나누기

회원&관리자 관리 : 송동준 신기성
상품&결제(장바구니) : 이재성 금길영
검색/게시판 : 박성현 장현걸

▶ 기능 
-----------------------------------------------------------------------------------------
2단계 
-----------------------------------------------------------------------------------------
▶ DB모델링(eXERD)
-----------------------------------------------------------------------------------------
3단계
-----------------------------------------------------------------------------------------
▶ 개별코딩
-----------------------------------------------------------------------------------------


