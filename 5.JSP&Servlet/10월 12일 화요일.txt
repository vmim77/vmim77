10월 12일 수업

[ 상품 더보기 - 스크롤 ]

마우스 스크롤을 맨 위로 올리면 처음 8개의 상품이 보여지고, 맨 아래로 내리면 상품목록을 끝까지 다 보여준다.

이벤트만 다르고 더보기 버튼 방식과 거의 비슷하다.

▶ 토탈카운트와 카운트는 필요하다.

▶ 스크롤 이벤트는 다음과 같다. 
$(window).scroll(function(){});

▶ 스크롤 탑의 위치 구하기 
==> $(window).scrollTop();
==> 스크롤 막대 꼭대기의 위치값을 알려준다.

▶ 문서의 높이값( 모든 제품이 출력되는 높이 )
==> $(document).height();

▶ 실제 웹브라우저의 높이값(디바이스마다 다르게 표현되는 고정값) (스크롤 되면서 문서를 짤라서 보여줄 높이)
==> $(window).height();

$(window).scrollTop() => 4064
$(document).height() => 5075
$(window).height() => 1011


웹브라우저높이 100, 문서높이 500, 스크롤 한 번당 스크롤탑의 위치값은 100
==> 스크롤 탑의 위치값이 0, 100, 200, 300, 400이 되어야 웹브라우저 높이가 100인 디바이스에서는 높이가 500인 문서를 모두 보여준다.
★ 문서길이 - 웹브라우저높이보다 스크롤탑이 더 내려왔다면 이벤트가 발생하게 한다.
==> 한 구간(상품 8개)을 내려온 것이니 다음 상품목록을 불러오게하면 된다.

즉, 문서 높이에서 웹브라우저 높이를 뺀 값이 스크롤탑의 위치값과 똑같아지면 한 구간의 맨 아래까지 내려온 것이니 다음 상품을 보여주는 것이다.

★ 문서길이는 고정값이 아니라 매번 증가한다.
==> 상품목록을 계속해서 append 하기 때문이다.

▶ 지금까지 본 상품개수와 총 상품개수가 똑같아지면 함수를 불러올 필요가 없다.

▶ 스크롤탑이 0이 되어지면 맨 위로 올라와진 것이다. 그러면 상품목록을 초기화시켜야 한다.

selectBySpecName 메소드에서 row_number()를 pnum 기준 desc로 하면 최신 상품이 가장 먼저 나온다.

▶ 할인율은 어떻게 구하는가?
제품 테이블에는 정가와 판매가만 나오고있다.
VO에서 처리를 한 것이다.

// *** 제품의 할인률 ***
public int getDiscountPercent() {
// 5000 : 3800 = 100 : x
// x = (3800*100)/5000 
// x = 76
// 100 - 76 ==> 24% 할인
		
// 할인률 = 100 - (판매가 * 100) / 정가
return 100 - (saleprice * 100)/price;
}
==> 정가     :  판매가  =  100 : x (비례식)

====================================================================================

[ 제품 분류별 나타내기 ]

전자를 누르면 전자만 보여준다, 페이징처리는 페이지바로 한다.

■ MallByCategoryAction.java

멤버리스트와 비슷하다.

카테고리 목록을 가져와야하니 super.getCategoryList(request); 메소드를 호출한다.

<a> 태그에서 해당 URL로 이동할때 GET방식으로 카테고리 번호를 보내고 있다.

현재 보고있는 페이지가 필요하다.
==> 카테고리 메뉴에서 카테고리명만을 클릭했을 경우에는 currentShowPageNo 은 null 이 된다.
==> currentShowPageNo 이 null 이라면 currentShowPageNo 을 1 페이지로 바꾸어야 한다.

회원같은 경우는 페이지당 인원수가 있었지만, 지금은 무조건 10개씩 보여준다.
==> sizePerPage는 무조건 10

GET 방식이니 사용자가 URL로 파라미터를 마구잡이로 설정하는 것을 막아야 한다.
==> currentShowPage를 try&catch 문에서 int형으로 바꿔봐서 오류가 나면 1로 바꿔준다.

pdao.selectProductByCategory(paraMap);
==> 제품 카테고리별 상품 조회해오기 

※ 조인 조건에 쓰이는 컬럼이 기준이 되는 테이블에 꼭 있어야 한다.
==> fk_cnum, fk_snum

[ 페이징처리 공식 ]

한 페이지의 첫번째 제품의 rownum -> (currentShowPageNo * sizePerPage) - (sizePerPage - 1)
한 페이지의 마지막 제품의 rownum -> (currentShowPageNo * sizePerPage)

where T.RNO between ? and ? ==> 1번 제품 ~ 10번 제품(1페이지), 11번 제품 ~ 20번 제품(2페이지), ......

▶ 존재하는 카테고리의 제품이면 나타내주지만, 없는 카테고리이라면 존재하지 않는 제품임을 알려줘야 한다.
<div>
	<c:if test="${empty requestScope.productList.length}"></c:if>
</div>


1   2   3   4   5 
6   7   8   9   10
----------------------
1,2  2 2 2 2 => 11 
1,2  2 2 2 2 => 11

==> 한 페이지당 10개를 얻어오는데, 얘를 <div class="row">를 써서 12분할로 보여주기 위해서 다음과 같이 한다.
※ row는 한 행당 12 col씩 들어온다.
==> 5개씩 보여주려고 한 것이다.

=========================================================================


[ 깃허브 gitignore 설정법 ]

gitignore에 path를 써서 적으면 된다.

##### commit 제외파일 #####
/MyGitExample/src/nocommit_all/
==> 이 패키지 안에있는 모든 파일은 commit 제외대상으로 잡는다.

※ 파일을 만든 다음에 ignore 잡는법
==> 커밋하기 전에 ignore 파일에 추가하면 커밋대상이 되질 않는다.

▶ 만약 커밋한 파일을 ignore 잡으려면?

1. 파일 내용 백업하고, 삭제한 다음에 다시 만들어서 커밋하기 전에 ignore 잡기 (무식한 방법)
2. [Team] - [advanced] - [untrack]

▶ 커밋하고 푸쉬한 파일을 ignore 잡으려면?
똑같이 untrack을 하면된다. 그러면 관리된 파일에서도 삭제로 여겨져서 웹에서도 삭제되고, 비관리 파일에서도 표시가 사라진다.
그후에 ignore에 적어준다.

=========================================================================

[ assume ]

파일 내용이 수정되어도 웹에 반영시키기 싫을 때 사용하는 것이다.

[Team] - [advanced] - [assume unchanged]
==> 파일 내용이 안 바뀐것으로 가정(assume)하는 것이다.
==> no assume unchanged 를 하면 풀린다.
