10월 07일 오전수업

[ 상세정보에서 뒤로가기 ]

회원상세정보에서 뒤로가기 버튼을 구현해야 한다. history.back() 을 이용하면 DB 변경 전에 캐시로 이동하기 때문에 사용해서는 안된다.

( URL 예시 ) - '유'를 검색하고, 5페이지를 본 경우
http://localhost:9090/MyMVC/member/memberList.up?currentShowPageNo=5&sizePerPage=10&searchType=name&searchWord=%EC%9C%A0

검색어: 유, 페이지: 5의 URL을 기억해놨다가 상세정보 페이지에서 '뒤로가기' 버튼을 누르면 그 URL을 다시 줘야한다.

페이지바가 쓰이는 곳에서는 뒤로가기 기능이 다 필요하니깐, MyUtil로 뺀다.

현재 페이지를 돌아갈 페이지(goBackURL)로 주소 지정하기
==> 회원조회를 했을시 현재 그 페이지로 그대로 되돌아가길 위한 용도로 쓰임.

★ URI와 URL의 차이점
URL => http://localhost:9090/MyMVC/member/idDuplicateCheck.up
URI => /MyMVC/member/idDuplicateCheck.up

▶ request.getRequestURL().toString(); 은 현재 URL 주소가 나온다. (GET방식이라면 물음표 앞까지 나온다)

▶ request.getQueryString(); 은 물음표 다음 데이터부분을 찍어준다.
==> post방식이면 null을 출력

currentURL => http://localhost:9090/MyMVC/member/memberList.up
queryString => currentShowPageNo=5&sizePerPage=5&searchType=name&searchWord=%EC%9C%A0

▶ 즉, currentURL + "?" + queryString 을 하면 우리가 원하는 주소이다.

▶ 메소드로 얻어온 상세정보 보기 전의 URL을 상세정보 페이지로 갈때 GET방식으로 같이 보내준다.
==> location.href="<%= ctxPath%>/member/memberOneDetail.up?userid="+userid+"&goBackURL=${requestScope.goBackURL}";

■ MemberListAction -> memberList.jsp -> MemberOneDetailAction -> memberOneDetail.jsp
■ goBackURL 생성   ->      전달          ->       전달                    ->       뒤로가기 버튼으로 사용

허나, 우리의 기대값만큼 URL이 출력되지 않고 있다.
==> /member/memberList.up?currentShowPageNo=5

뒤에 sizePerPage, 검색타입, 검색어도 나와줘야한다.

저렇게 바뀐 이유는 goBackURL에 &가 포함되어서 끊기기 때문이다.
★ 쿼리스트링은 변수 = 값 식으로 되어있는데 &가 왔다는 것은 해당 값의 끝임을 알리기 때문에 currentShowPageNo=5 이후의 값들이 안나왔던 것이다

이 문제를 해결하기 위해서 MemberListAction.java에서 보내기 전에 조치를 취해야한다.
==> &를 모두 바꿔준다.

currentURL.replaceAll("&", " ");
==> URL에서 공백을 절대 안쓰이니 공백으로 바꿔서 다시 currentURL에 넣어준다.
==> URL에서 공백은 '+'로 치환됨

그래서 다시 MemberListAction -> memberList.jsp -> MemberOneDetailAction -> memberOneDetail.jsp 순으로 넘기는데, memberOneDetail.jsp 에서 공백으로 바꾼 것을 &로 바꿔서 뒤로가기로  사용한다.

★ 자바스크립트에는 자바처럼 replaceAll이 없다.
replace만 있는데, 이것을 자바의 replaceAll처럼 사용하려면 다음과 같이 한다.

"korea kena".replace(/k/gi, "y") ==> "yorea yena"  여기서 주의할 것은 /"k"/ 아니라 /k/ 와 같이 "" 가 없어야 한다.

[ 정리 ]
다시 페이지를 되돌아갈때는 history.back() 보다는 URL을 따줘서 가는게 낫다.
왜냐하면 중간에 DB가 변경되면 history.back()은 반영을 못하기 때문이다.

=======================================================================

[ 제품 ]

쇼핑몰홈으로 가면 소개동영상이 사라져야한다. ==> 뽀로로 오프닝 유튜브가 header.jsp에서 사라져야함

쇼핑몰홈은 header2.jsp / footer2.jsp를 호출시키게 한다.

카테고리 목록은 가변해야한다. --> DB에서 받아서 있는 목록들만 찍어줘야 함(동적처리)
==> 똑같은 것을 두번 코딩하기엔 별로이니 부모클래스에서 만들어준다.

// ***** 제품목록(Category)을 보여줄 메소드 생성하기 ***** //
// VO를 사용하지 않고 Map으로 처리해보겠습니다.

List<Map<String, String>> categoryList = pdao.getCategoryList();

▶ 부모클래스에 getCategoryList 메소드를 호출하면 DB에서 카테고리 목록을 뽑아서 리스트를 만들고 리퀘스트 영역에 저장시켜준다.


쇼핑몰홈으로 입장 --> 액션 클래스 호출, 부모클래스에서 만든 메소드인 카테고리 목록 메소드 호출 // 부모클래스에서 카테고리목록 따와서 리퀘스트 영역에 저장 시켜줌 --> 쇼핑몰홈 View 페이지로 옴 --> 지시어 include로 카테고리 view 페이지를 가져옴(지시어 방식이라 리퀘스트영역 호출시켜도 작동됨)