06월 24일 오전수업

Quiz8Main : 입력한 문자에서 대문자, 소문자, 숫자, 특수문자는 각각 몇 개인가?
Quiz9Main : 입력한 문자에서 최초로 숫자가 나오는 곳의 앞 까지 출력하고, 그 길이를 측정
Quiz10Main : 알파벳 반복출력하기, 홀수 알파벳만 반복출력하기
Quiz11Main : 첫 번째 입력정수부터 두 번째 입력정수까지 홀수의 합과 짝수의 합을 각각 구하라

★ 무한루프식은 Break를 적절하게 넣어줘야 한다.
★ int보다 작은 byte, short, char인 변수는 사칙연산을 만나면 자동으로 int형으로 변환된다.

(횟수를 정한 for문과 무한루프 for문의 i의 숫자가 차이나는 이유)

false면 증감식에 올라가서 i가 증가하지 못하고 그냥 종료가 된다.
하지만 무한루프에서 charat(i++)로 해버리면 i값 준 다음에 i를 일단 증가시키고 break로 내려가서 i값에 차이가 있다.

(cnt와 index 값의차이)

index는 0부터 시작해서 문자 하나씩 뽑기 시작
 // 0 s, 1 u, 2 p, 3 e, 4 r, 5 0

cnt는 문자길이 1개부터 숫자 세기 시작
 // cnt=5이면 super이니깐 O, cnt=6 이면 super7이니깐 X

*i는 문자열 위치이니 0부터 시작
*cnt는 문자열 길이를 재니 1부터 시작

★ for문과 while문은 입사테스트때 꼭 나오니, 주의해서 준비할 것

===================================================================
06월 24일 오후수업

Quiz12Main : 퀴즈11의 홀수합 짝수합 합쳐서 만들어보기 

★★★★★ 눈으로 코드만 보지말고, 손으로 직접 쳐봐야 한다.
>> 패키지를 하나 만들어서 샘플소스를 안 보고 짜봐야 한다.
>> 막히면 그때 샘플소스를 본다.
>> 스스로 풀리면 끝내고, 안 나온다면 참고하고 다시 안 보고 짜본다.
>> 수업때 주석을 꼼꼼히 적어서 혼자 풀어볼 때 이해 안가면 설명을 보자

다중 FOR문을 이용해 구구단 짜기

2중 FOR문을 이용해 행열 구구단 짜기
행 
   열


입사시험 기출 구구단 문제

3중 for문 

2세트 (2 3 4 5 // 6 7 8 9) dan=2, dan<10, dan+=406월 24일 오전수업

★ 무한루프식은 Break를 적절하게 넣어줘야 한다.
★ int보다 작은 byte, short, char인 변수는 사칙연산을 만나면 자동으로 int형으로 변환된다

[Quiz8Main.class]
문자를 탐색하여 대문자 개수, 소문자 개수, 숫자 개수, 특수문자 개수 파악하기

String.length( );  ==> 문자의 길이를 측정하여 int형으로 돌려주는 기능
String.charAt( );  ==> 문자열 중에서 index 값의 문자 하나만 떼어내서 char형으로 돌려주는 기능
==> 문자열은 0부터 시작한다.
==> qwer1234 ==> charAt(0); ==> 'q'

Character.isUpperCase(char 형); ==> 들어온 char 문자가 대문자이면 true를 반환한다.
Character.isLowerCase(char 형); ==> 들어온 char 문자가 소문자이면 true를 반환한다.
Character.isDigit(char 형); ==> 들어온 char 문자가 숫자이면 true를 반환한다.

*isAlphabetic(int 형) ==> 대문자든 소문자든 알파벳이면 true를 반환한다. 허나, int형으로 들어와야 한다.

==================================================================

[Quize9Main.class]
문자를 탐색하여 숫자가 나오는 곳의 앞까지 문자열을 출력하고, 그 문자열의 길이를 파악한다.

String word = "super007man$"  // 검사해야할 문자열
String str = ""; // 숫자가 나오는 곳의 앞까지 문자열을 모아둘 곳
int cnt = 0; // 숫자가 나오는 곳의 앞까지의 문자열의 길이 셀 곳

for(int i=0; i<word.length();i++){
	char ch = word.charAt(i);
	if(!Character.isDigit(ch)){
	str+=ch;  // 문자열을 하나하나 뜯어봐서 숫자가 아니면 계속해서 str에 쌓이게 한다.
	cnt++;  // 그리고 한 개씩 숫자를 세게한다.
	}
	else break; // 만약 숫자가 들어왔다면 for문을 벗어나게 한다.

(횟수를 정한 for문과 무한루프 for문의 i의 숫자가 차이나는 이유)

일반 for문에서는 false면 break를 만나서 증감식에 올라가서 i가 증가하지 못하고 그냥 종료가 된다.
하지만 무한루프에서는 charAt(i++)로 해놨기에 i번째 한 글자를 뽑은 다음에 i++를 해주고 if문으로 내려가기 때문에 값의 차이가 있다.

(cnt와 index 값의차이)

index는 0부터 시작해서 문자 하나씩 뽑기 시작
 // 0 s, 1 u, 2 p, 3 e, 4 r, 5 0

cnt는 문자길이 1개부터 숫자 세기 시작
 // cnt=5이면 super이니깐 O, cnt=6 이면 super7이니깐 X

*i는 문자열 위치이니 0부터 시작
*cnt는 문자열 길이를 재니 1부터 시작

==================================================================

[Quiz10Main.class]

알파벳 소문자를 아래처럼 출력하세요.
a, b, c, d, e, ..................,x, y, z


for(int i=0; i<'z'-'a'+1; i++) {
	char ch = (char)('a'+i); 
	// 97+0 => 'a', 97+1 => 'b', 97+2 => 'c'

String str = (i<'z'-'a')?",":"";
>>i < 'z'-'a'+1는 z까지
>>i < 'z'-'a'는 y까지
>> 끝값 - 처음값 +1,  ex. 10-1+1

System.out.print(ch+str);
// 내려와서 "a,"을 찍고 다시 올라간다.
// 내려와서 "b,"을 찍고 다시 올라간다.
// ..........
// 내려와서 "z"을 찍고 다시 올라가나, 조건식에 걸려서 끝난다.

알파벳 소문자를 아래처럼 출력하세요.
a,c,e,g,i,k,m,o,q,s,u,w,y

for(int i=0; i<'z'-'a'+1; i++){
	char ch = (char)('a'+i);

	if((ch+0)%2 == 0)
	continue; // 짝수 알파벳이면 출력을 하지 않고, 증감식으로 다시 올라간다.

String str = (i<'z'-'a'-1)?",":"";
System.out.print(ch+str); 


==================================================================

[Quiz11Main.class]
첫번째 정수 : 2엔터        그냥엔터      "똘똘이"엔터     2.45엔터
두번째 정수 : 10엔터      그냥엔터      "똘똘이"엔터      2.45엔터
		
>> 결과 <<
2 부터 10까지의 홀수의 합은 : 24    3 부터 10까지의 홀수의 합은 : 24
2 부터 10까지의 짝수의 합은 : 30    4 부터 10까지의 홀수의 합은 : 28


스캐너 이용

for(;;)
   try 
   catch 
를 이용해서 정상적인 실수를 입력할 때까지 무한루프 시킨다.

int holSum = 0;
int jjakSum = 0;

for(;;){
if(firstNo%2==0) // 첫번째 정수의 값이 짝수라면
	firstNo = firstNo + 1; // 홀수로 바꾼다.

if(firstNo <= secondNo)
	holSum += firstNo;

else
	break; << 범위를 벗어나면 홀수용 누적합계 반복문에서 벗어나게 한다.

firstNo += 2; << 다음 홀수를 가져오게 함
}// end of for




위와 같이 짝수용 누적합계 반복문도 만든다.

만들기 전에  firstNo는 위에 반복문에서 초기치가 바꼈음으로 
firstNo = Integer.parseInt(strFirstNo); 로 초기화한다.

==================================================================
06월 24일 오후수업

★★★★★ 눈으로 코드만 보지말고, 손으로 직접 쳐봐야 한다.
>> 패키지를 하나 만들어서 샘플소스를 안 보고 짜봐야 한다.
>> 막히면 그때 샘플소스를 본다.
>> 스스로 풀리면 끝내고, 안 나온다면 참고하고 다시 안 보고 짜본다.
>> 수업때 주석을 꼼꼼히 적어서 혼자 풀어볼 때 이해 안가면 설명을 보자

[Quiz12Main.class]

홀수용 누적합계와 짝수용 누적합계 반복문을 합친다.

int holsu =0, jjaksu =0; 값을 추가한다.

if(firstNo%2 == 0) { // 첫번째 입력받은 수가 짝수이라면
   holsu = firstNo + 1; // 이러면 홀수가 됨
   jjaksu = firstNo;
}

else { // 첫번째 입력받은 수가 홀수이라면
   holsu = firstNo;
   jjaksu = firstNo + 1; // 이러면 짝수가 됨
}

// == 홀수 및 짝수의 합을 구한다. == //
if(holsu <= secondNo)
   holSum += holsu;    // 홀수용 누적합
if(jjaksu <= secondNo)
   jjakSum += jjaksu; // 짝수용 누적합

holsu += 2;
jjaksu += 2;

if(holsu > secondNo && jjaksu > secondNo)
break;
9랑 10이면 내려오면서 누적합에 더해지고, 11랑 12가 되는데 그러면 두번째 입력한 10을 넘어가니 break;
==================================================================
[GuguDan1Main.class]

for(;;) 스캐너로 들어온 구구단수가 정수형인지 아닌지 검사하는 무한루프 (레이블 : outer)
   for(;;) 종료창 무한루프
      또 하지 않겠다고 하면
      break outer;로 프로그램을 끝내버린다.
 ==================================================================.
[GuguDan2Main.class]

System.out.println("== 구구단 ==");
		
int row = 0, col = 0;
// row 는 9개 , col 는 8개
		
for(row=1; row<10; row++) { // 얘는 곱해지는 수 
   for(col=2; col<10; col++) { // 열 단위
      System.out.print(col+"*"+row+"="+(col*row)+"\t");
   }
   System.out.print("\n");
}

 ==================================================================.
[GuguDan3Main.class]
입사시험 기출 구구단 문제

3중 for문 

for(dan=2; dan<10; dan+=4) 2세트 (2 3 4 5 // 6 7 8 9) dan=2, dan<10, dan+=4
    for(row=1; row<10; row++) 행 (9줄)
        for(int i = dan; i<dan+4; i++)열 (4개)


3세트(dan=1; dan<10; dan+=3) (1 2 3 // 4 5 6 // 7 8 9)
    for(row=1; row<10; row++) 행 (9줄)
        for(int i = dan; i<dan+3; i++)열 (3개)




     행 (9줄)
        열 (3개)


3세트 (1 2 3 // 4 5 6 // 7 8 9)
     행 (9줄)
        열(3개씩)



내일 : while문 ,do~while문, 랜덤, 가위바위보 게임 만들기, 배열