6월 17일

[Java 설치 & 환경설정]
Java SE 8이 가장 점유율이 높다.
291버전이 최신버전

[JRE와 JDK 차이점] 
▶JRE(Java Runtime Environment)란?
- JRE는 Java Runtime Environment의 약자로 자바 프로그램을 실행시켜주는 환경을 구성해주는 도구이다. 
  즉 JAVA로 개발할 필요는 없으나, JAVA로 개발된 프로그램을 실행 시켜줘야 하는 경우에는 반드시 JRE가 있어야 한다. 
  JRE 속에 JVM(Java Virtual Machine)이 들어있는데 JVM은 자바소스코드(.java)로 부터 컴파일 되어진 자바바이너리파일(.class)을 실행해주는 장소이다. 
  JVM은 운영체제(Windows, Linux)마다 다르지만 컴파일 되어진 자바바이너리파일(.class)은 Windows용 JVM 이나 Linux용 JVM 이나 어떤 JVM에서도 동일하게 작동된다.   
  그러므로 JAVA는 운영체제와 관계없이 어디서든지 개발하여 컴파일된 자바바이너리파일(.class)만 있으면 운영체제와 무관하게 모두 작동하게 된다. 
  그런데 JAVA를 사용하여 프로그램을 개발할때는 반드시 필요한 것이 있는데 그것이 바로 JDK 이다.
   
▶JDK(Java Development Kit)란?
- JDK는 Java Development Kit의 약자로 말그대로 자바 개발시 필요한 툴킷을 제공하는 도구모음이다. 
  JAVA로 개발하려면 당연히 실행도 시켜줘야 하므로 JDK 안에는 JRE가 포함되어 있다. 

▶사용자 입장에서 요약하자면 
- JAVA로 만들어진 프로그램을 실행만 시킬 것이라면 JRE만 설치하면 되고
  JAVA 개발자라면 JDK를 설치해야 한다.

오라클 등은 경로에 한글이 있으면 오류가 난다. 웬만하면 경로는 모두 영어로 표기해야 한다.
Java 버전이 똑같아야 GitHub 충돌이 잘 안 일어난다. 
Java update를 사용중지로 해놔야지 pull을 할 때 버전차이가 없어서 호환성에 문제가 안 일어난다.

*JDK 설치 후 -> classpath 변수추가, java_home 변수추가, path편집 

JAVA SE - Standard Edition
JAVA ME - Mobile Edition
JAVA EE - Enterprise Edition


==> 고급언어를 저급언어로 바꾸어주는 과정을 컴파일(comphile) 이라고 부른다.
         고급언어란? 사람(개발자)이 알아볼 수 있는 언어
         저급언어란? 기계(컴퓨터)가 알아들을 수 있는 언어 

HEX 16진수 / DEC 10진수 / OCT 8진수 / BIN 2진수

.java는 사람이 알아듣는 파일

컴파일 후에는

.class는 컴퓨터가 알아듣는 파일

컴파일 할 때는 확장자명까지 다 쳐야한다. ex) javac HelloExam.java
컴파일 한 것을 돌릴 때에는 확장자명을 빼고 쳐야한다. ex) java HelloExam

System.out.println 이라고 치면 한 줄 띄고 다음 것을 출력한다.

import 선언에서는 아래 class 본문에서 쓸 기능들을 미리 쓰겠다고 패키지주소와 기능 명을 가져와서 선언을 해야 한다.
>> 첫글자가 대문자이면 다 클래스이다.
>> java.lang.*은 import 선언을 할 필요가 없다. 이미 모두 사용하겠다고 선언돼있으며 생략되어져 있다.

classpath에서 .이 의미하는 바는 java를 컴파일러한 폴더에 class 파일이 있음을 뜻한다.

[이클립스]
Begin\src 폴더에는 .java 파일이 저장된다. 이곳에 파일들을 컴파일 시켜야 컴퓨터가 읽을 수 있는데 .class 파일들은 Begin\bin에 생성된다.

오른쪽 아이콘은 오로지 java 콘솔 프로그래밍
왼쪽 아이콘은 java + WEB (JSP servlet) 프로그래밍

패키지명의 첫번째 글자는 무조건 소문자로 써야한다.
Class명의 첫번째 글자는 무조건 대문자로 써야한다.

sysout치고 ctrl + space bar를 누르면 바로 System.out.println이 쳐진다.

*이클립스는 JDK(자바)를 깐 다음에 자바를 개발하는데 도움을 주는 '유용한 도구'이다.

[이클립스 설정]
MS949는 옛 방식이라 모든 값을 UTF-8로 바꿔줘야한다.


[class 작동방식]
disk의 class들은 메모리(ram)을 점유하는데 cpu가 적절하게 할당을 해줘서 작동한다.
>> disk에 있지 않고 메모리(ram)에 로딩되어진 상태를 Object라고 한다. (실제로 실행되서 메모리에 올라간 상태 = 설계도면에 있던 것이 실제 물건으로 만들어진 상태)

ex.
만약에 쇼핑몰 프로그램을 작성하고자 한다라면
회원, 제품, 장바구니, 주문내역 등등 여러가지 부품이 필요할 것이다. 
여기서 필요로 하는 부품의 설계도면을 "클래스"라고 보면 된다.
이러한 "클래스"들이 실행되기 위해서 메모리(RAM)에 로딩된 상태를 Object(객체)라고 부른다.

★★★★★ 필수암기 ★★★★★ 
OOP(Object Oriented Programming) 객체 지향 프로그래밍의 특징 4가지
1. 추상화
2. 상속
3. 캡슐화
4. 다형성

자바에서 '='는 우항을 좌항에 대입한다의 뜻이다, 같다는 '=='이다.

member에는 main에서 입력되어진 id, pwd, name, email이 저장된 곳이며 
main에서 호출함수를 사용하면 member에 저장된 정보가 main에 전송된다.

println은 ====회원정보====를 왼쪽 앞에서 띄우고, \n은 오른쪽에서 띄운다.


★★ 자바에서 소괄호는 메소드와 생성자만 있다.
인스턴스들은 메모리에서 서로 독립된 공간에 저장되어지기 때문에 공유할 수 없다. 
인스턴스들끼리 공유하고 싶은 변수를 스태틱변수이다. 
(EX. 아이디와 비밀번호는 회원들끼리 서로 달라야 하지만, 주소는 회원들끼리 같아도 상관없게 해야한다.)


스태틱 변수를 그냥 쓰면 모든 address에 '서울시 마포구'를 부여하지만, 후에 '경기도 군포시 오금로'를 덮어씌워버린다.

스태틱변수는 클래시 명. 으로 써야한다. 인스턴스 명. 으로 쓰면 안 된다.
스태틱변수는 사용빈도가 낮다. 거의 인스턴스 갯수를 헤아릴 때 사용한다.
주소도 마찬가지로 인스턴스 변수로 만들면 된다.

인스턴스 = 오브젝트 = 객체

member에 필요한 항목들과 항목에 기입된 정보를 불러내는 행동을 설계하고, main에서 항목들에 정보를 넣은 다음에 설계된 행동을 실행한 것이다.

부품들을 끌어다가 쓰는 곳은 main.java이다. 
콘솔프로그램의 실행은 main(String[] args) 메소드에서 실행한다.
출력은 항상 main에서만 가능하다.


=============================================================================

출석은 9:00 / 11:00 / 14:00 / 16:00 / 17:50 에 한다. 총 5회
금요일 : 자기소개(1~2분) 준비하기

<< 자기소개 >>

1. 성명 : 박성현
2. 나이 :  27세
3. 거주지 :  인천광역시 서구
4. 최근활동내역 :  졸업과제, 독학, 취업지원제도 구직활동
5. 하고싶은말 : 

=============================================================================

[앞으로의 계획]

1. Java Fundamental : 기초를 탄탄히 닦아놔야 후에 문제가 없다. ★★★★★
2. Oracle : Datebase를 관리하는 프로그램, 정보를 모아두고 적절하게 가공하는 프로그램이다.
3. mini Project (도서대여관리) ==> Java + Oracle , 3명이 1팀
4. HTML5, CSS, Javascript, jQuery
5. JSP(Java + Front-end) & Servlet(웹페이지를 동적으로 생성하는 서버측 프로그램)
6. semi Project (쇼핑몰) ==> 6명이 1팀
7. Spring FramWork
8. Final Project ( 주제 자유 ex. 그룹웨어, LMS, 예매시스템, 숙박 등등 ) ==> 6명이 1팀
9. 임베디드 -- LED 등 켜키
10. 취업

★ 영타연습 해야한다. 오타로 인해 코드가 잘못되면 찾아야해서 바빠짐
 