08월 24일 오전수업

[ split ]

※ 자바에서도 split는 String으로 되어진 문자열을 짤라서 배열로 만들어주는 것이다. 

▶ split : string 타입의 문자열을 잘라내서 배열로 만들어주기
▶ "문자열".split("구분자");

====================================================================================

[ 중복된 요소 제거하기 ]

input 태그중에서 type 속성이 text인 input 태그 css에서 선택하기
==> input[type=text]

처음 값 : 10,1,2,3,4,5,2,6,7,2,3,4,5,6,9
==> 확인버튼을 누르면 중복된 값들을 제거하고 나머지만 result에 다시 출력시킨다.

★ 모든 태그들은 데이터 타입이 object이다.

document.getElementById("").value 는 value 속성값을 가져온다.
document.getElementById(""). innerText 는 태그 사이에 적혀진 내용물을 가져온다.

★ 어떤 태그 속에 넣을 때는 innerText, innerHTML
★ input 태그의 value 속성에 값을 줄 때는 

====================================================================================

[ 중복된 요소 제거하기2 - forEach ]

배열명.forEach(function(item, index, array){})
item  - 현재 처리중인 배열의 각 요소
index - (선택사항으로 생략가능) 처리중인 요소의 인덱스
array - (선택사항으로 생략가능) forEach()가 적용되고 있는 배열

※ 배열명.forEach() 은 break; 없으므로 만약에 break; 를 사용하고 싶다라면 일반적인 for문을 쓰면 된다.

====================================================================================

[ 객체배열 ]

▶ 자바스크립트에서 배열은 대괄호 [ ] 
▶ 자바스크립트에서 객체는 중괄호 { }

var arrPerson = [{ },{ },{ }];
==> 얘는 객체배열이다.

style.display = "none"; 
==> display를 보이지 말라는 css 이다.
==> 내용물이 있지만 보이지 말라는 의미이다.

※ display 의 종류
block, inline, inline-block, table, flex, none

document.getElementById("display").style.display = "";  는 CSS에서 해당 태그의 display 기본값으로 설정하겠다는 뜻이다.
==> 만약 태그가 <div>라면 display의 기본값인 block으로 보라는 뜻이다.

테이블들이 서로서로 옆으로 나와야하기 때문에 display: inline-block을 준다.
==> div#display에  display: inline-block을 주면 div가 옆으로 나오게 하는 것이다.

※ min-height: 최소 높이보다 높아지면 내용물만큼 높이가 커진다.
※ max-height: 최대 높이보다 커지면 내용물을 짜르고 스크롤바로 나타낸다.(overflow 옵션에 따라 다릅니다.)

-------------------------------------------------------------------------------------------------------------------------------------

[ 객체배열 - <select> 태그를 이용해서 선택된 인물의 정보 나타내기 ]

<option>으로 들어올 인물들은 가변되기 때문에 고정값을 써줄 수 없다. 
==> DB에서 인물들을 가져와서 넣어주기 때문에 누가 들어올 지 알 수 없다.

★ <select> 태그는 이벤트가 click이 아닌 change이다.

select
선택하세요 - 0번
아이유 - 1번
김태희 - 2번
박보영 - 3번

▶ <select>.selectedIndex;
==> 선택된 <option>의 index를 알려준다. 

배열명.forEach(function(item,index,array)) + break; == 배열명.some(function(item,index))
==> 조건이 true가 되어지는 순간 반복을 멈춰버린다.
==> 내부의 if문의 해당되면 더 이상 반복을 하지 않고 break; 되어져 버린다.

※ line-height는 태그 안에 내용물이 써져있는 곳에 쓴다.

====================================================================================

08월 24일 오후수업 

[ 금액 세자리마다 콤마찍기 ]

※ 콤마 기준으로 split하고 ==> "" 아무것도 없는 구분자로 다시 String 타입으로 바꾼다. ==> Number( )로 숫자형으로 바꾼 다음에 계산을하고 ==> toLocaleString( ) 으로 세자리마다 콤마를 찍은 String으로 다시 바꾼다. 

숫자.toLocaleString('en');
==> 세자리 마다 "," 를 찍어서  문자열로 반환시켜주는 내장된 함수이다.

====================================================================================

[ 현재날짜시간_시계만들기 ]

▶ 나중에 Date를 이용하여 인증코드를 문자로보내고 시간 내에 입력하도록 하는 로직을 짤 수도 있다.
==> 또는 은행권에서 로그인 시간제한 등..

new Date() 는 new Date() 가 실행되는 시점에 날짜 및 시간 데이터를 갖고 오는 것이다.
==> 요일명 월 일 년도 시:분:초 GMT기준시간 
==> 그리니치 천문대 시간이다.

★ 자바처럼 자바스크립트도 월은 0부터 시작하기 때문에 1을 더해야 정상적인 월이 된다.

get 함수는 원하는 년 / 월 / 일 / 시 / 분 / 초 / 밀리초를 뽑아오는 것이고, set 함수는 시간변경이다.

now.getFullYear() ==> 현재년도

====================================================================================

[ 시계 만들기 ] 


▶ 시간 자동갱신(1) - setTimeout( )
==> setTimeout('func_loopDate()', 1000);
시간을 불러오는 get 함수들을 또 하나의 함수로 만들어서 주기적으로(매 1초마다) 불러오도록 한다.

▶ 몇 초뒤에 함수가 작동하도록 하는 방법 ==> setTimeout('함수명', 5000);
==> 시간 단위는 밀리초이다. (1000밀리초 == 1초)

★ 자바스크립트에서 리턴타입은 없다. 그냥 돌려주고 싶다면 return을 써서 돌려주고 싶은 값을 써주면 된다.
==> 자바는 이와 다르기 함수 선언 앞에서 리턴타입도 선언해야하고 그거에 맞춰서 리턴값을 설정해줘야 한다.

function func_loopDate() {
	
	document.getElementById("currentDate").innerHTML = func_currentDate();
	
	setTimeout('func_loopDate()',1000);
	
} // end of function func_loopDate()------------------------

1초마다 계속 자신을 불러오고 또 1초마다 계속 자신을 불러온다.


▶ 시간 자동갱신(2) - setInterval( )

setInterval(function(){ }, 1000);
==> 정해진 시간마다 함수(핸들러)의 내용을 실행해라는 말이다.


▶ setTimeout은 함수 호출식, setInterval은 함수 서술식이다.



====================================================================================

[ 제한된 시간 이후에 로그아웃 시키기 ]

▶ 주로 인증키를 받아서 5분 이내에 넣어라할 때 응용되서 쓰임 

▶ 타이머 시간은 가변적, 연장버튼을 종료전에 눌러야만 연장이 가능하게 한다.

★ 시간이 종료되면 setTimeout 함수를 다시 재실행이 안되게 해야한다.
==> clearTimeout(); 를 하면 setTimeout 함수를 없앤다.

★ 자바스크립트에는 변수에 함수를 넣을 수 있다.
★ onclick="func_Finish()" 식으로 이벤트처리에 함수를 넣을 수 있다.

또한 시간이 종료되면 연장 버튼을 비활성화시킨다.
document.getElementById("btnDelay").disabled = true;
==> 버튼 자체를 아예 죽여버린다.

※ enable은 없다.
==> document.getElementById("btnDelay").disabled = false; 이게 활성화다.


====================================================================================

★ 목록 정리하기




