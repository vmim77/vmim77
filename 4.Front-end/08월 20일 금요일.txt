08월 20일 금요일 오전수업

▶ 상, 하에 패딩을주면 height도 그 패딩만큼 늘어난다.
ex) height 10, padding: 30px, 0; 이면 웹에서 출력되는 총 높이는 70이다.

=====================================================================

[ Flex ]

▶ float으로 로고와 메뉴(nav)를 left, 로그인창(아이디, 비밀번호, 로그인버튼)을 right로 줘도 된다.
▶ flex를 사용해도 된다. (IE11부터 가능함)

먼저 flex를 사용하려면 배치하려는 것들(flex item)을 겉에서 한 번 둘러싸야 한다.
(div#outer -- img, form)
그리고 그 둘러싼 것에 display: flex;를 준다.
==> 둘러싼 것에 height를 주면 거기에 들어가는 모든 요소들에 높이를 동일하게 준다.
==> 또한 모든 요소들은 display가 inline-block으로 된다.

▶ flex를 사용한 폼태그를 맨 우측으로 보내는 방법은?
==> margin-left: auto; 만 주면 끝난다.
★ flex에 img와 form 태그들에게 위치를 배치하고 남은 여백을 폼태그 왼쪽에 다 주겠다는 뜻이다.

▶ 오른쪽 끝으로 보낼 flexitem에게 margin-left: auto말고 다른 방법으로 맨 우측으로 보내기
==> flexitem들을 배치하고 남은 flex의 공간들을 <img>에게 margin-right에 준다.


float보다 flex가 더 쉬울 수 있다.

=====================================================================

[ 동영상 & 음악 삽입하기 ]

<audio src="audio/맘마미아4-dancing_queen.mp3" controls></audio>

▶ audio 태그는 웹브라우저에서 플러그인의 도움없이도 음악멀티미디어를 재생할 수 있게 해주는 태그이다.
▶ controls : 소리파일을 실행 및 중지 그리고 소리크기를 조절할 수 있는 조절기를 보이게 할 것인지 아닌지를 결정하는 것이다.
----------------------------------------------------------------------------------------------------------------
<video controls>   
   <source src="video/The Simpsons.mp4" type='video/mp4;codec="avc.1.42e01e, mp4a.40.2"'> </source>
</video>

▶ <video> 태그는 동영상을 삽입해주는 태그로서 크롬에서만 지원해주고 있음.
▶ HTML5를 이용하여 삽입한 동영상은 자동재생 안되므로 컨트롤도구가 삽입되어야 한다
▶ controls 속성은 동영상 화일을 조절할 수 있는 조절기를 보이게 할 것인지 아닌지를 결정할 수 있다.


<video width="640" height="368" controls poster="images/apple.jpg">  
==> 재생하기 전에 영화포스터같이 이미지를 보여준다.

<video width="640" height="368" controls autoplay>   
==> 자동재생을 해준다.

=====================================================================

[ position ]

★ HTML을 하다보면 <div> 위치를 옮길 때가 있는데 그 때 사용하는 게 바로 position이다.

▶ position: static 은 position 값을 아예 안 준것과 동일하다.
==> position: static 으로 했을때에는 위치값을 줘봐야 엘리먼트의 위치는 변하지 않는다.


<body>의 width: 80%는 HTML의 너비에 8할이다.
<div id="container">의 width: 80%는 <body>의 너비에 8할이다.

top: 200px;
left: 200px;
==> 좌측 상단 꼭지점에서부터 200px씩 위치 이동한다.
==> top, left로만 위치이동을 시키는 것이다.

==> static은 위치를 줘봐야 작동이 안한다.
----------------------------------------------------------------------------------------------------------------
★ block방식은 자식태그에 width를 안 주면 부모태그의 width만큼 설정된다.

==> absolute는 문서기준으로 위치가 정해진다. (절대위치)
==> 또한 absolute로 position을 주면 부모 - 자식 관계를 끊어버린다.
==> 그래서 자식의 width 크기는 부모의 width에 영향을 받지 않는다.
==> 그래서 만약 position: absolute;를 준것에 width: 80%를 주면 부모태그의 8할의 크기가 아니라, 모니터 크기의 8할만큼 너비가 잡힌다.
==> 만약 position: absolute;를 준것에 width를 안 주면 내용물 크기만큼 설정된다.


top: 200px;
left: 200px;
==> absolute는 브라우저의 시작화면(출발점)에서 위에서는 200px 만큼 내려온 후, 좌측 끝에서 200px 옆으로 온 후에 시작이 되게 한다.

★ absolute는 부모-자식 관계를 끊기 때문에 body를 뚫고 나갈 수 있다.
==> 그래서 신중하게 써야한다.
----------------------------------------------------------------------------------------------------------------
상대위치(relative positioning)

얘는 현재 자기 위치를 기준점으로 top, left가 적용된다.
크기는 이동하기 전의 크기를 유지하는데 width: 80%; 이런식으로 크기를 주면, 이동하기 전(원래꺼)의 크기에서 80%로 변환된다.

▶ absolute는 모니터의 80% 크기
▶ relative는 원래꺼의 80% 크기
----------------------------------------------------------------------------------------------------------------
고정위치(fixed positioning)
position: fixed

얘는 스크롤바를 이동시켜도 계속 따라다닌다.
==> 부모와의 관계가 사라진다.
==> 스크롤의 영향도 안 받는다. (고정)

==> 얘도 출발점은 absolute랑 똑같다. (문서가 출발점)
==> 얘도 width는 모니터크기 기준임
----------------------------------------------------------------------------------------------------------------
▶ static: top, left 적용안됨
▶ absolute는 문서를 기준으로 출발점이 설정됨
▶ relative는 현재위치가 시작점
▶ fix는 문서를 기준으로 출발점이 설정됨

★ vertical-align은 디스플레이: 테이블이거나, 테이블일때만 먹혀진다.
==> table 자체에 주면 안되고, 해당될 행에 vertical-align을 줘야한다.

href="#"
==> 자기 자신의 페이지로 가라 == 맨 처음으로 간다.

=====================================================================

[ min height / max height / min width / max width ]

▶ width: 고정값

▶ min-width: 최소 width 가 n%이고 그 속에 들어오는 내용물의 크기가 n% 보다 크면 자동적으로 width가 내용물의 width 크기만큼 증가 되어진다.

▶ max-width: 최대 width 가 n%이고 그 속에 들어오는 사진이 더 크면, 자동적으로 스크롤바가 나온다.
==> 크기는 더 이상 안 늘어난다.
==> overflow: auto; 를 써야 수평 스크롤바가 생긴다.
==> 맨 처음에는 크기가 내용물만큼 잡힌다.

=====================================================================

[ overflow ]

overflow 속성은 엘리먼트의 박스에 들어가는 내용이 많아서 내용물이 엘리먼트 밖으로 빠져나올때 어떻게 보일지 선택하는 속성이다.

기본값은 overflow: visible;

▶ overflow:visible 은 엘리먼트의 박스의 기본값으로서 내용물이 더 길어도 내용물이 그대로 보인다. 그래서 내용물이 흘러넘쳐서 보여진다.

▶ overflow:hidden 은 내용물이 넘친다면 넘치는 내용물은 자른다. 그래서 자른 부분은 보이지 않는다. 

▶ overflow:scroll 은 무조건 엘리먼트에 수평스크롤바 및 수직스크롤바가 보이도록 한다. 그래서 내용물이 넘치지 않더라도 엘리먼트 박스에는 항상 수평스크롤바 및 수직스크롤바가 보인다. 

▶ overflow:auto 은 내용물이 넘칠때만 엘리먼트 박스에 스크롤바가 생겨서 내용물을 스크롤바를 이용하여 모두 보이도록 한다. 

★ overflow는 주로 max일때 사용한다 --> 최대값을 차고넘치면 어떻게 보여줄지 정해야 해서

=====================================================================

[ 반응형 웹 ]

기기마다 화면 너비나 높이가 다르기 때문에 기기에 맞게 화면을 보여준다.
==> 이럴 때 쓰는 것이 반응형 웹, 미디어 쿼리이다.
==> 손코딩으로 하려면 너무 번거롭지만, bootstrap을 쓰면 간편하게 할 수 있다.

★ 반응형을 하려면 <meta name="viewport" content="width=device-width, initial-scale=1"> 이게 먼저 나와야 한다.
==> width=device-width 는 width는 실제 기기의 크기만큼 쓰겠다는 말이다.


휴대폰 세로일땐 어떻게 보여주고~, 휴대폰 가로일땐 어떻게 보여주고
태블릿PC 세로일땐 ~~, 가로일땐 ~~
PC화면일땐 ~~ 

현업에서는 이런 부분을 전문적으로 도맡아 하는 사람을 Web Publisher라고 한다.

==> 여기까지 HTML, 오후에는 Javascript
=====================================================================

08월 20일 오후수업

맨위로 버튼은 테이블말고도 flex로도 만들 수 있다.
테이블과 테이블셀로 vertical-align, text-align해도 괜찮고, flex로 margin: auto; 를 해도 괜찮다.

=====================================================================

[ Javascript ]



[ 자바스크립트의 변수타입 ]

▶ 문자열은 쌍따옴표 혹은 홑따옴표
==> 자바는 홑따옴표는 문자형, 쌍따옴표는 문자열
==> 오라클은 홑따옴표가 문자열


웹페이지에 결과물을 나타내고자 할때 document.write(); 을 사용합니다.
==> 기존에 있던 다른 태그들은 다 날려버린다.
==> 그리고 write( ) 내용만 보여준다.

※ 만약에 쌍따옴표 안에서 또 쌍따옴표를 써야한다면, 홑따옴표를 쓰면 된다.
==> "웹페이지에 <span style='color: red;'>결과물</span>을 나타내고자 할때 document.write(); 을 사용합니다."


.innerText; 는 태그는 다 빼버리고 내용물만 가져오고,
.innerHTML; 은 태그까지 포함한 내용물을 보여준다.

문자열을 숫자로 변환하는 함수는 parseInt( )

★ 변수가 여기에 있으면 중간에 값을 여기에 넣는다. = innerText(HTML) = 변수가 여기에 있으면 해당 아이디에 여기 값을 넣는다.
==> innerText(HTML)은 값을 가져오기도하고, 값을 넣어주기도 함


실수형도 똑같이 number로 나온다, 변환은 parseFloat( )
==> 정수건, 실수건 다 number 타입


▶ 실수를 parseInt하면 어떻게 되는가? -- parseInt(1234.567)
==> 소수부는 절삭된다. --> 1234가 됨

Number(1234) ==> 글자 그대로를 그냥 number 타입으로만 바꿔줌


★★★★★ 자바스크립트에서 변수의 타입은 들어오는 값에 의해서 정해진다.
==> 자바와 다르게 고정적으로 타입을 정하는 것이 아니다.

var bool = 1234; ==> 이러면 number
var bool = "하하호호"; ==> 이러면 string
var bool = true; ==> 이러면 boolean

★ 자바스크립트의 반복문, 조건문 등 제어문들은 자바와 문법이 똑같다.

▶ 자바스크립트에서 문자열 비교는 그냥 == 을 쓴다.

▶ 변수에 값을 안주면 타입이 결정되지 않기 때문에 undefined 가 뜬다.
==> 나중에 undefined가 뜨면 값을 안 넣었거나, 값을 못 읽어오는 것이다.


=====================================================================

[ 자바스크립트의 객체 ]

★★★ 자바스크립트에서 사용되어지는 객체 사용법

var person1 = {}; // {} 이 자바스크립트에서 말하는 객체이다.
==> 객체명.속성명 = 값; 으로 한다.

		
var person1 = {}; 				// {} 이 자바스크립트에서 말하는 객체이다.
person1.userid = "leess"; 			// 객체명.속성명 = 값; 으로 한다.
person1.pwd = 'qwer1234';			// 객체명.속성명 = 값; 으로 한다.
person1["name"] = '이순신';			// 객체명["속성명"] = 값; 으로도 할 수 있다.
person1["age"] = 25;			// 객체명["속성명"] = 값; 으로도 할 수 있다.


var person2 = {userid:"eomjh"
	     , pwd:"abcd1234"
	     , name:"엄정화"
	     , age:"25"};

==> 이렇게 넣을 수도 있으며, 이 방법을 더 선호한다. '필드명:필드값'

=====================================================================


▶ 데이터값이 숫자가 아닌 경우 NaN(Not a Number)

=====================================================================

[ 함수 ]

자바는 method, 자바스크립트는 function 이라 부른다.


=====================================================================
▶ 오늘할 것
ch04_form ~ ch12_mediaquery + quizMain -- HTML

▶ 과제 (완료)
기한 : 다음주 월요일(8/23) 18:00 까지

메일제목 : [과제]이력서_박성현.html
첨부파일 : 이력서_박성현.zip ==> 이력서_박성현.html + myphoto.png

HTML로 자유롭게 만들어서 만들기(div, table 등등) --> 사진도 첨부하면 굿

/resume/imagers/myphoto.png
/resume/이력서_박성현.html
