09월 02일 목요일 오전수업

[ profile & storage ]

storage는 jQuery가 아닌 일반적인 HTML5에서 제공하는 기능이다.

▶ 프로필 더보기 기능 만들기

1. 클릭이벤트에 아래에 .append( )로 기존에 추가된 html에 '프로필 더보기' 버튼을 추가한다.
2. mouseout 이벤트처리에 .empty( )를 지운다. // 안 지우면 '프로필 더보기' 버튼을 클릭하려고 마우스를 떼면 요약정보가 사라짐
3. 프로필 더보기 버튼을 클릭하면 프로필 더보기 버튼은 삭제되고 프로필 닫기 버튼이 생성되고 프로필 정보를 더 보여준다.
→ 프로필 닫기를 클릭하면 프로필 닫기도 삭제되고 추가정보도 사라지고, 다시 프로필 더보기가 생성된다.

★★★★★ $("span#profileMore")는 body 태그속에 직접 기술된 것이 아니여서 선택자가 잡히질 않는다. (우리가 스크립트에서 기술한 것이다.)
==> 어쩔 때는 잘 잡아주는데, 어쩔 때는 안 잡힌다. (100%가 아니여서 확실하게 잡으려면 아래 방법을 사용한다.)
==> 그래서$(document).on('이벤트','선택자',function(){ }); 를 써야한다.

프로필 더보기를 클릭하면 프로필 더보기(자기자신)은 사라지고, 프로필 닫기가 생성되어야 한다.
==> remove( )가 자기자신의 태그를 없애버린다.
==> empty( )는 자기의 하위태그들을 없앤다.

▶ 이름은 복수 개이지만, 더보기 버튼은 1개이다.
▶ 그러면 누구의 정보탭에서 프로필 더보기를 눌렀는지 어떻게 알고, 알맞는 정보를 가져다 주는가?
==> 이럴 때 정보를 잠시 세이브해주는 storage를 써서 저장소에 넣어뒀다가 꺼내준다.
==> storage에 누구의 버튼을 클릭했는지 index값을 넣어두고, 프로필 더보기에서 꺼내서 쓴다.(출신학교, 나이를 알아오기 위해서)

▶ storage는 두개로 나뉜다. ==> Local storage, Session storage

▶ 크롬 - F12 - Application 에서 스토리지에 저장된 값을 볼 수 있다.

▶ Key - Value로 이루어져있다.

특정 HTML 파일에서만 데이터를 저장하겠다면 변수에 저장해도 괜찮지만, 웹같은 경우는 여러 개의 HTML 파일과 JSP 등(예: 쇼핑몰 프로젝트)이 묶여서 하나의 프로그램이 되기 때문에 서로서로 데이터를 공유하기 위해서는 storage를 사용하는 것이 좋다.

(예시)

a.html
b.html
c.html

어떠한 데이터를 a.html의 스크립트에서 A변수에 담아뒀다.
b.html이나 c.html은 해당 A변수를 사용할 수 없다.
==> 공유하려는 데이터를 storage에 저장해둔다면 a.html/b.html/c.html 모두 꺼내서 사용할 수 있다.

==> 나중에 프로젝트를 하다보면은 이런 경우가 많다. 

▶ Local storage와 Session storage의 차이점
==> 로컬 스토리지는 프로그램적으로 삭제하지 않는 이상 영구적으로 남아있다. (영구적)
==> 세션 스토리지는 해당 웹페이지를 꺼버리거나, 브라우저를 꺼버리면 자동적으로 삭제된다. (즉, 일회성) 


★ profile_storage.html 주석설명문 읽어보기

▶ 스토리지에 저장시키는법

localStorage/sessionStorage.setItem("키값", "데이터");

스토리지에 넣기 --  localStorage.setItem(키값, 벨류값)
삭제하기 --  localStorage.removeItem(키값)
가져오기 --  localStorage.getItem(키값)
몽땅 다 지우기 --  localStorage.clear( )

(예시)
localStorage.setItem("country",'대한민국');
sessionStorage.setItem("point",50);

▶ 사용법은 똑같지만, 생명길이가 다르다. 로컬 스토리지는 직접 삭제하지 않는 이상 사라지지 않고, 세션 스토리지는 창이나 브라우저를 꺼버리면 자동적으로 소멸된다.
==> 자동로그인 등은 로컬 스토리지
==> 잠깐만 필요한 정보는 세션 스토리지
※ 비밀번호 같은 중요한 정보는 절대 저장하면 안 된다.

==> 예전에는 쿠키란 것이 있다.(얘는 HTML이 아니라 JSP임)

storage에 누구의 버튼을 클릭했는지 index값을 넣어두고, 프로필 더보기에서 꺼내서 쓴다.(출신학교, 나이를 알아오기 위해서)
==> 얘는 영구적이 필요가 없으니, 세션 스토리지에 넣는다.

====================================================================================

[ children & find ]

하위요소(하위태그)를 찾는 children( ), find( )

▶ children( ): 선택자.children() 은 선택자의 자식(손자는 아님)태그(자식요소)만을 가리키는 것이다.

▶ find( ): 선택자1.find(선택자2) 은 선택자1 안에 있는 선택자2 를 가리키는 것이다.
==> 선택자.find("*") 은  선택자안에 있는 모든 하위요소(자식 뿐만 아니라 자손까지 포함)을 가리키는 것이다.


★ children()은 파라미터가 못 들어오며, 선택자의 자식만 찾는다.
====================================================================================

[ checkbox & toggleClass & parent & siblings & prev/next ]

▶ toggleClass( )

선택자.toggleClass("클래스명1");
addClass와 removeClass가 합쳐진 것이다.

이것은 어떤 선택자에 "클래스명1"이 이미 적용되어 있으면 removeClass를 해주고,
적용되어 있지 않다면 addClass를 해준다. (==한/영 키)

==> 만약에 체크박스에 체크를하면 미리 설정해둔 css 클래스를 줘서 시각적인 효과를 금방금방 줄 수 있다.

▶ checkbox

jQuery를 이용하여 checkbox 모두선택 / 해제 구현하기

$("input:checkbox[id=checkall]") - 인풋태그인데, type이 checkbox이고, 그 중에도 속성값에서 id가 checkall인 것

체크여부 확인하기: is(":checked") == prop("checked")

jQuery를 이용하여 checkbox를 radio처럼 만들기

▶ prev( )

<span class="buttons">
	<label for="checkall">모두 체크/해제</label>
	<input type="checkbox" name="checkall" id="checkall" value="" />
</span>

label과 input은 형제인데 label태그는 id나 클래스가 없어서 선택자로 잡기 애매하다. 그렇다면 input태그를 잡은 다음에 .prev( )를 사용하면 쉽게 잡을 수 있다.

// 확인 버튼을 클릭하면 체크한 인물이 2개인지 아닌지 판별한다.

$("input:checkbox[name=person]:checked") 는 name이 person인 체크박스들 중에서 체크가 된 체크박스들만 선택한다.
** join("구분자") -- 배열을 구분자로 연결해서 string으로 만든다.
** split("구분자") -- 하나의 문자열을 구분자로 잘라서 배열로 만들어준다.


// === 체크박스를 라디오처럼 만들기 === //

$("input:checkbox[name=person2]").click(function(){
	$("input:checkbox[name=person2]").prop("checked", false); // 전체체크를 해제하고
	$(this).prop("checked", true); // 클릭한 애만 체크해준다.
});

▶ parent( ): 선택자.parent() 는 선택자의 부모요소(부모태그)를 가리키는 것이다.
==> 선택자.parent().parent() 는 선택자의 부모요소의 부모요소(부모태그의 부모태그)를 가리키는 것이다.
==> ★ 나의 부모

▶ siblings( ):  선택자.siblings() 는 선택자의 형제요소(형제태그)중 선택자(자기자신)을 제외한 나머지 모든 형제요소(형제태그)를 가리키는 것이다.
==> ★ 나를 제외한 나의 형제들


====================================================================================

09월 02일 오후수업	


[ fadeIn & fadeOut & slideUp & slideDown ]
==> 애니메이션 효과이다.

선택자.fadeIn(3000); 은 선택자에 해당되는 내용물을 숫자(단위는 밀리초) 밀리초 동안 천천히 나타내어라는 말이다.
==> 3000 은 3초 이다.

▶ hide( )로 숨겨진 내용을 show( )는 바로 보여주는 것이고, fadeIn( )은 천천히 보여주는 것이다.
▶ hide( )는 바로 내용을 감춰버리고, fadeOut( )은 천천히 감춘다.

▶ slidedown( )은 show( )처럼 내용을 슬라이드해서 보여주는 것 (보여주는 것)
▶ slideup( )은 hide( )처럼 내용을 슬라이드해서 감춰준다. (감춰주는 것)

★ 나머지는 코드 확인하기


====================================================================================	

[ animate & fadeTo ]

태그를 이동 시키려면 반드시 position 은 relative; 또는 absolute; 로 설정되어 있어야 한다.
img#fish1 {position: relative;}
img#fish2 {position: absolute;}

==> 포지션을 안주면 기본값 position:static;이 들어가져있어서 이동이 안 된다.

$(this).animate({left:600, top:500}, 5000);
                            {위치값}, 시간

▶ relative는 현재 자기위치를 기준으로 좌표값대로 이동한다.
▶ absolute는 HTML 문서 좌측 상단에서부터 좌표값대로 이동한다.

▶ animate(properties, speed, callback)는 애니메이션 효과이다.
==> properties은 애니메이션이 끝나고 선택자가 가지게 될 속성이다.


▶ fadeTo( )는 이미지를 희미하게 만든다.

$(this).animate({left:600, top:400}, 3000).fadeTo(3000, 0.1, myCallBack);
==> 좌표 값만큼 3초동안 이동한 다음에, 3초동안 opacity(광도)를 0.1로 만드는 것이다.
==> opacity가 끝나면 그 후에는 myCallBack 함수를 호출한다.

▶ callback 함수란?
CallBack 함수란 이름 그대로 나중에 호출되는 함수를 말한다.
==> 어떤 이벤트가 발생했거나 특정 시점에 도달했을 때 시스템에서 호출하는 함수를 말한다.


====================================================================================	

[ 야바위 게임 만들기 ]

물고기 뒤에 들어갈 사진들의 인덱스는 난수로 설정하여서 개발자도 정답을 모르게 한다.

뽑은 난수번호를 기억시켜둘 장소를 만든다. ==> arrOld
==> 동일한 난수를 뽑았는지 아닌지를 비교하려고
==> arrOld 배열에 -1를 2번만 넣은 이유는 3번째 난수는 그냥 앞에 2개의 난수와 비교만 하면 되니깐 굳이 arrOld 배열에 넣어줄 필요X

★ arrOld의 길이를 제한해두진 않았음, 값만 넣은 것이다.
==> 자바의 배열이면 길이가 제한이 됐을 것이다.

arrRndIndex의 저장된 인덱스 값들 바로 연예인 사진들이 들어갈 인덱스(위치값)들이다. 

클릭하면 html( )으로 물고기 사진의 크기와 똑같은 연예인 사진들이 덮어씌워진다.

내가 클릭한 곳은 eq로 내가 클릭한 index의 img 태그에 css로 테두리를 준다.

당첨 유무는 내가 arrNewImg에 넣은 파일명으로 당첨됐는지 안 됐는지를 파악한다.

연예인 이미지는 img 태그로 넣을때부터 사이즈를 물고기 사진과 맞춰야지
이벤트가 발생했을 때 사진크기를 정해주면 안된다.