08월 16일 오전수업

[ 파티션 나누기 ]
▶ Header
▶ Side
▶ Contents
▶ Footer

<div>는 block방식이여서 width를 안 잡아주면 끝까지 간다.

<body>
  <div>

  </div>
</body>

<body>는 부모태그이고, <div>는 자식태그이다.

부모태그 안에서 width를 %를 주면 부모태그 안에서 자동으로 백분율로 나눠서 너비를 차지하게 한다.
==> 자식태그는 width를 안 잡아주면 부모태그 너비만큼 자동 설정된다.
==> 자식태그의 width: 100% == 부모태그의 width

기기마다 모니터의 화면크기가 다르기 때문에 px로 좌우에 margin을 주면 서로 차이가 있다.
==> 그래서 20px auto식으로 주면 상/하는 20px씩, 좌/우는 기기에 맞춰서 딱 중앙에 오게 해준다.

container 안에 header, side, contents, footer가 있는 것이다.

▶ Header : 메뉴가 들어오는 부분
▶ Side : 바로가기 모음
▶ Contents : 주 컨텐츠 내용
▶ Footer : 회사소개, 인재채용, 고객센터 등등..

Side와 Contents 만큼은 두 개를 잡아서(클래스 customDisplay로 설정한다) inline 방식으로해서 둘이 동시에 나오게 해야한다.
==> 허나, width와 height를 주기 위해서 inline-block방식을 사용하게 한다.


아무리 inline 방식이라고 해도, 공간이 부족하면 밑으로 떨어진다.

★ cache는 예전 꺼를 기억한다는 뜻으로, css가 갱신이 안된다면 [F12] - [network] - [Disable cache] 를 체크해야 한다.

컨테이너에서 border 1px를 줘서 안에 공간이 100%가 아닌 99.998... 정도가 된다.
==> 그래서 사이드와 컨텐츠를 3:7로 나누면 공간부족으로 컨텐츠가 밑으로 떨어진다.
==> 그래서 적당히 비율을 줘서 맞추기만 하면 된다. 
==> 반드시 꽉 채울 필요는 없다.

=================================================================================================================================================

[ semantic 태그 ]

CSS는 '임베디드방식'을 사용할 예정

시멘틱태그란 '태그에 어떤 의미를 부여하는 것'이다.

semantic : '의미를 갖는다'는 뜻으로, 각 태그가 스스로 의미를 지닌다는 뜻

header : 사이트에 대한 소개 정보나 메인 메뉴, 사이트 로고 등이 포함됨
hgroup : 제목과 부제목을 묶는 역할
nav : 사이트의 메뉴나 링크 같은 내비게이션 요소들이 포함
section : 실제 문서 내용이 들어감
article : 문서 내용이 많을 경우 여러 개의 <article> 요소로 나눌 수 있음
aside : 문서의 주요 내용 외의 내용들을 넣어 문서의 주영역 주변에 배치
footer : 작성자 정보나 저작권 정보, 또는 관련 문서 링크 등 부가 정보들을 담고 있음
          주로 문서 하단에 배치    

★ 딱히 기능이 있는 것은 아니고, 소스상에서 구분을 하기 위해서 사용하는 것이다. 

<ol>
  <li>
  </li>
</ol>

ol 태그는 순서가 있는 목록태그이면서, 항상 안에는 자식태그로 <li>가 와야한다.

<ol start="50"> 이렇게 쓰면 시작숫자를 바꿀 수 있다. 만약 아무것도 안주면 1부터 시작한다.
<ol style="list-style-type: decimal-leading-zero;">는 01./02./03. 식으로 숫자 앞에 0이 온다.
<ol style="list-style-type: upper-alpha;;"> 는 영문대문자가 나온다.
<ol style="list-style-type: lower-roman;"> 는 로마숫자 소문자가 나온다.

★ 네비게이션은 ul을 쓴다. 또 none으로 기호를 없앤다.
==> ul태그는 순서가 없는 리스트이다.


-------------------------------------------------------------------------------------

아이디가 nav_ul의 자식태그인 li를 선택하려면 ==>

<ul id="nav_ul">
	<li>
		1학년 게시물
		<ul>
			<li>1반</li>
			<li>2반</li>
			<li>3반</li>
		</ul>
	</li>
	<li>2학년 게시물</li>
	<li>3학년 게시물</li>
</ul>

ul(id=nav_ul) 의 자식태그는 <li>1학년 게시물</li>.... 들이다.
<li>1반</li>들은 자식태그가 아닌 손자의 손자(증손자) 태그들이다.

-------------------------------------------------------------------------------------

ul#nav_ul li {
	
}

==> 얘는 아이디가 nav_ul의 모든 li태그들을 선택한다.(자식, 손자, 증손자 모두)

-------------------------------------------------------------------------------------

ul#nav_ul > li {
	
}

==> 얘는 아이디가 nav_ul의 자식 li태그들만 선택한다.(1학년 게시물, 2학년 게시물, 3학년 게시물만 선택)

-------------------------------------------------------------------------------------
리스트를 옆으로 나오게 하려면? ==> 

<li>는 default가 block 방식이다. (width, height가 먹히며, 세로로 떨어진다)
inline-block 으로 display를 바꾼다.



*<strong> -- 글자굵게
*<mark> -- 형광펜 == background-color

웹페이지 하단에는 주로 footer를 넣어서 끝임을 표시한다.

section, article, footer 모두 block방식이다 (==> div와 비슷하지만, 의미를 부여해준다는 차이가 있다)

=================================================================================================================================================

[ 신문기사 웹페이지 만들기 ] 

<html lang="ko"> 
==> 의미만 알려주는 것이다. 이 HTML은 한글로 써졌다는 것이다.

<mete charset="UTF-8"> 
==> 이게 있어야지 한글이 깨지지 않고 작성된다.

★ li들에 display: inline-block을 줘야 가로로 쭉 이어져서 네비게이션들이 나온다.
==> ul에 display: inline-block을 주면 안됨

href="../"
점 한개는 현재폴더
점 두개는 상위폴더로 가라는 뜻

<a> 태그의 밑줄과 링크를 한 번 누르면 보라색으로 변하는 거 없애기

a {
	text-decoration: none;
}


=================================================================================================================================================

08월 18일 오후수업

<a> 태그는 링크를 한 번 클릭하면 보라색으로 변경되고, 한 번도 클릭을 안하면 파랑색이다.

css 선택자 : id, class 등등

a:link ==> 링크를 누르기 전
a:visited ==> 링크를 누른 후
a:hover ==> 링크에 마우스 포인터를 올려 놨을 때 

★ float
inline-block으로 posts와 sidebar를 해도 되지만, float도 괜찮다.

float을 쓰고 선 종료를 선언해야 그 아래에 나오는 footer등이 꼬이질 않는다.
안 그러면 footer가 꼬여버린다.

clear: both;
==> float이 무슨 방향이든 상관없이 float이 쓰인 파트 다음에 나오는 파트는 float에서 해방시키라는 뜻이다.
★ 꼭 float 다음에는 claer:both;를 해줘야 한다!!


크롬 개발자도구를 사용해서 원하는 selector 를 찾을 수 있다.

---------------------------------------------------------------------
header#page_header ul , footer#page_footer > nav > ul {
	list-style-type: none; /* 기호를 안 보이게 함 */
}
---------------------------------------------------------------------

요렇게 콤마(,)를 찍고 같은 css 효과를 두 곳에 줄 수 있다.

글자 줄 간격 ==> line-height

공백이 없는 영어를 쭉 쓰면 너비를 뚫고 지나간다.
==> 바디태그에 word-break: break-all;를 쓴다.

=================================================================================================================================================

[ 폼 태그 ]

웹에서 뭔가를 입력받아(회원가입) DB에 전송을 할 땐 폼 태그를 사용한다.

폼 태그안에는 필드셋이 들어온다. 필드셋은 폼을 그룹핑(묶어주는것)하는 역할이다.

<input /> == <input></input>

list-style-type ==> 리스트의 기호를 없앤다.


항목들에게 똑같이 width를 줘서(라벨로 항목들을 다 감쌌음) 서로 항목과 인풋 사이의 간격이 동일해졌다.



항목명에 클릭을 해도 인풋에 클릭되서 커서가 깜빡이도록 하고자 한다.
ex) 프로젝트명을 클릭하면 인풋태그에 마우스커서가 올라가도록 하려한다.

<label for="prjname">프로젝트명</label>
<input type="text" id="prjname"/>

위와같이 프로젝트명에 for="인풋태그 아이디명" 을 쓰면 된다.

maxlength="30" --> 최대글자수 제한
autofocus ==> 문서가 뜨자마자 커서가 autofocus가 써진 곳에 깜빡이게 함
placeholder="예: 인사관리프로그램" ==> 문자열을 미리 예시로 보여주는 것
autocomplete="off" ==> 자동완성기능 끈다.

※ submit과 reset은 반드시 form 태그 안에 넣어야 한다.

필수입력사항 --> required 


[input 타입]
text -> 글 입력하는것
range -> 막대로 숫자를 표시하는것
submit -> 입력한 내용 전송
reset -> 입력한 내용 취소
date -> 날짜입력