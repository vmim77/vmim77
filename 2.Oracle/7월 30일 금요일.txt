07월 30일 오전수업

[ FOR LOOF 문 ]

[문법]
        
for 변수 in [reverse] 시작값.. 마지막값  loop
     실행문장;
end loop;

reverse를 하면 마지막값부터 시작해서 시작값이 될때까지 1씩 감소한다.


==================================================================

[ WHILE LOOF 문 ]


[문법]
while   조건   loop
   실행문장;
end loop;

조건이 참이라면 실행한다. 조건이 거짓이 되어지면 반복문을 빠져나온다.

==================================================================

[ 사용자 정의 예외절 ]


** else 절에는 괄호가 못 나온다.
 예외절 = 오류절
  
  ※ 형식
  
  
    exception
        when    익셉션이름1  [or 익셉션이름2]    then  -- 여러개의 익셉션을 묶어서 같은 실행문이 나오게 할 수 있다.
                실행문장1;
                실행문장2;
                실행문장3;
                
        when    익셉션이름3  [or 익셉션이름4]    then
                실행문장4;
                실행문장5;
                실행문장6;
                
        when    others   then   -- 기타 익셉션이라면
                실행문장7;
                실행문장8;
                실행문장9;

==================================================================

[ table 타입 변수 ]

부서번호가 10번인 사원은 한명 밖에 없어서 행이 1개이다.

부서번호가 30번인 사원의 행은 복수 개이다. (2개 이상)
==> 우리가 일반변수에 넣으려는데 일반변수는 배열이 아니다.
==> 그래서 한 행의 컬럼 값 한 개씩 밖에 못 넣어준다.
==> 일반변수는 기본적으로 한 개씩 밖에 저장을 못해준다. 배열이 아니여서


오라클은 배열이 없고, table 타입의 변수가 있어서 자바의 배열처럼 사용할 수 있다.

==================================================================

07월 30일 오후수업

into 로 값을 넣어줄 때는 데이터가 없으면 no_data_found가 뜨지만,
직접 변수에 담아주는 식(v_ename := 값) 은 no_data_found가 뜨지 않는다.

부서번호 9000으로 조회를 하면 조회된게 없어서 행이 안 나온다.
그래서 JOIN을 시킬 수도 없으며 Mapping을 할 수도 없다.

정리 : select 되어진 결과물이 없으면 for문을 돌리질 않는다. select 되어진 결과물이 있어야 반복횟수가 설정되기 때문이다.
==> i := i +1; 이 수행되어지는 경우는 부서번호로 조회했을 때 조회된 행이 있어야 수행된다.

그래서 아래의 dbms 출력식인 
------------------------------------------------------------
부서번호   부서명    사원번호      사원명    입사일자   성별   나이
------------------------------------------------------------

얘만 출력이 된다. 

또한 아래의 출력식에 있는 반복문도 i가 0이여서 작동을 안한다.

배열처럼 table 타입의 변수가 있지만 너무 번거롭기 때문에 쓰질 않는다.
이것보다 훨씬 간단한 게 있다. ==> 커서이다.

==================================================================

[ 명시적 커서 ]

PL/SQL 에서 select 되어져 나오는 행의 개수가 2개 이상인 경우에는 테이블 타입의 변수를 사용해서 나타낼 수 있고, 또는 커서를 사용하여 나타낼 수도 있다.
그러나 테이블 타입의 변수를 사용하는 것 보다 커서를 사용하는 것이 더 편해서 커서를 많이 쓴다.

-- fetch 작업은 나온 행 갯수만큼 반복해야 한다.

==================================================================

[ FOR LOOP 커서 ]

1단계는 똑같다.

2~4단계를 다음과 같이 축소시킨다.

FOR 변수명(select 되어진 행의 정보가 담기는 변수) IN 커서명 LOOP
   실행문장;
END LOOP;

==================================================================

[ 패키지 ]

PACKAGE(패키지)란? 여러개의 Procedure 와 여러개의 Function 들의 묶음

create or replace package 패키지명
is
   
       --> 패키지에 들어올 프로시저 또는 함수를 선언한다.
   
end 패키지명;






다음주 : 정규화(제 1~4 정규화, 역정규화), 데이터베이스 모델링(DB설계),  자바 & 오라클 결합
==> 이후 팀별 프로젝트(MINI 프로젝트)
==> PPT 파일로 발표