07월 16일 오전수업

* NULL 처리를 항상 잘 해야한다. (NVL, NVL2)

[주민등록번호 필드생성 - update] ==> 어떠한 행의 데이터를 변경해줄 때 쓴다.

어떤 테이블에 존재하는 행의 컬럼의 값을 변경하려고 할 때는 update 명령어를 사용해서 변경해준다.

update employees  set first_name = 'Steven', last_name = 'King'
where employee_id = 100; 
==> set column = 에서 '='는 '같다'가 아니라, '대입한다'의 뜻이다.  

★ commit 을 쓰지 않고 update 를 한다면 세션의 메모리(RAM)에서만 변경된 것이지 실제로 변경된 것은 아니다.
★ commit 을 해야만 메모리(RAM)상에 변경되어진 것을 실제 디스크(DISK) 파일에 적용시켜주는 것이다.

'rollback' --> 메모리(RAM)상에 변경되어진 정보를 삭제해주는 것이다. 즉, 위에서 실행한 update 명령을 한 결과를 취소하겠다는 말이다.
==> rollback 을 한 다음에 아무리 commit 을 해도 메모리 상에 변경된 것이 없기 때문에, 넣을 것이 없다.

==============================================================

[테이블에 컬럼 추가하기]

[추가방법]
alter table 테이블명 
add 추가할필드명 데이터타입;

[삭제방법]
alter table employees
drop column jubun;

* update  : 행의 데이터 변경
* alter : 테이블 변경

주민번호는 2000년생이면 맨 앞에 00이 나오니, NUMBER 타입으로 설정할 수 없다.
==> varchar 타입이 적절하다.  (0107161234567)
==> number 타입이면 맨 앞의 0이 생략되어진다. (107161234567)
** 핸드폰 번호도 010 으로 시작하니, varchar2
** 학번도 0 으로 시작할 수 있으니, varchar2

==============================================================

[like 연산자]

select *
from employees
where department_id = 30;

select *
from employees
where department_id like 30;

결과값은 같으나, like 는 '=' 를 대신하는 기능이 아니다.
like 는 wild character 와 같이 쓴다.
==> % 는 글자수와는 관계없고, 글자가 있든지 없든지도 관계없다.
==> _ 의 뜻은 반드시 아무글자 1개만을 뜻하는 것이다.

ex. 
김% ==> 김군, 김장군 상관없다.
김_ ==> 김군(O), 김장군(X)

==> _ 는 갯수에 맞게 글자 수를 채워야하고, %는 글자가 있든 말든, 글자수도 상관없다( 마치, excel 의 * 와 같다. )

==============================================================

[wild character의 escape]

** 접두어 : tbl_ 은 table을 의미한다. ( 암묵적인 관행으로 테이블을 만들때 접두어로 쓴다. )
** 한글은 2byte 씩 세고, 영어는 1byte 씩 센다.
varchar2 를 byte 제한이 아니라, 글자수 제한으로 하는 방법은 Nvarchar2(10) 이런 식으로 n이나 N을 쓰면 글자수 제한이 된다. (※ 관행상 대문자 N 을 쓴다.)

  select *
  from tbl_watch
  where bigo like '%99.99\%%' escape '\';
  -- escape 문자로 '\'을 주었으므로 '\' 다음에 나오는 wild character 1 개는 escape 된다.
  -- '99.9%' 를 포함한 글자를 찾는다.
  -- escape 문자 숫자 특수문자는 아무거나 써도 괜찮다.
  -- 헷갈리기 때문에 주로 특수문자를 쓴다.
-----------------------------------------------------------------------------------------------------
[테이블 만들기]
create table 테이블명
( 필드명 필드타입, 필드명 필드타입);

-----------------------------------------------------------------------------------------------------
[테이블에 데이터 추가하기]

어떤 테이블에 데이터(행) 입력할때는 insert 라는 명령어를 사용한다.

insert into 테이블명(필드1, 필드2) values('필드1에 넣을 값','필드 2에 넣을값');

★ insert도 update와 마찬가지로 commit 이 필요하다 / 메모리 상에만 올라갔고, 디스크에는 올라가질 않았다.

★ rollback도 쓸 수 있다.

★ insert, update, delete, merge 같은 DML문은 수동commit 문이다. ==> 데이터 입력/ 수정/ 삭제/ 수행(insert + update)
★ create, alter, drop 같은 DDL문은 오토commit이다. ==> 테이블이나 관계의 구조를 생성하는데 사용

DCL ==> 데이터의 사용 권한을 관리, 오토commit이다.


==============================================================
==============================================================
==============================================================


07월 16일 오후수업

★ 자기 생각을 일단 주석으로 쓴 다음에 ==> 자바나 오라클에 해당되는 함수를 골라서 적어서 ==> 기능을 구현한다.


[단일행 함수]

1) 문자 함수
1.1 upper()
1.2 lower()
1.3 initcap()
1.4 substr()
1.5 instr(문자열, 찾을문자열, 시작점, 몇번째 문자열)
==> lastindexof 와 비슷한게 있
instr('교육센터 서울교육대학교 교육문화원', '교육', -1, 1)
==> 시작위치를 음수를 주면 '교육문화원'의 '원'부터 시작한다. (역방향으로 간다)

1.6reverse()
1.7 lpad()
1.8 rpad()
1.9 ltim()
1.10 rtrim()
1.11 trim()
1.12 translate('문자열', '문자열에 존재하는 문자', '대체할 문자')
==> 문자열에서 / 요런것들이 존재한다면 / 0은 영으로 바꾸고, 1은 일로 바꾸고, ...., 
select translate('010-3456-7890' ,'0123456789' , '영일이삼사오육칠팔구')
==> 두번째와 세번째의 총 갯수는 똑같아야 한다 1대1 랩핑임
1.13 replace()

==> translate 는 한 글자 별로 치환 규칙 만들기
==> replace 는 특정단어만 치환하기
1.14 length

많이 쓰는거 => substr
==============================================================
2) 숫자 함수
2.1 mod 나머지를 구해주는 것
2.2 round 반올림 // round(숫자, 단위수) //  단위수에 맞춰서 반올림을 해준다. // 0은 정수 1자리 , -1은 정수 십의자리, 1은 소수 첫째자리
2.3 trunc 소수부를 절삭하고 정수부분만 살린다.
==============================================================
5) 기타 함수
5.1 case when then else end ==> !!! 암기 ★★★★★
==> 표준 SQL 문이여서, MS-SQL 도 똑같다

★ case 다음에 조건식을 안쓰면, when 다음께 참인지 거짓인지 확인하고 참이면 then 구절을 출력한다.
==> 참 거짓은 얘만 구분가능, 범위구분도 가능
★ case 다음에 조건식이 있다면 값이 같냐 다르냐이다.

5.2 decode ==> !!! 암기 ★★★★★
==> 얘는 오라클에서만 사용가능, 값이 같냐 다르냐만 구별가능, 범위구분은 못한다.



다음주 : 성적처리만들기, 날짜함수(좀까다로움!!), 나머지 단일함수, 그룹함수