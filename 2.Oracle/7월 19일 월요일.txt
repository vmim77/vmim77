07월 19일 오전수업

성적처리 만들기, 날짜함수, 나머지 단일함수

[ 성적처리 ]

create table 테이블명 (필드   필드타입, 필드1   필드타입,  필드2   필드타입);

insert into 테이블명 (필드, 필드1, 필드2) values (값1, 값2, 값3);

case when then else end 
decode 

to_char ( 값, '999.0' ) << 출력형식 999 는 정수부 / 0 은 소수부가 0이여도 출력
==> 출력값을 문자열로 변환시킴, 변환함수

=================================================================

[ 숫자 함수 ]

2.4 power : 거듭제곱

power(2, 5) -- 2의 5승 == 2*2*2*2*2

2.5 sprt : 제곱근

2.6 sin, cos, tan, asin, acos, atan

2.7 log

2.8 sign 삼각함수

2.9 ceil(실수) ==> 올림, 입력되어진 실수 보다 큰 최소의 정수를 나타내어 준다.
==> 만약 정수가 들어온다면, 입력되어진 정수를 그대로 나타내어 준다.

2.10 floor(실수) ==> 내림, 입력되어진 실수 보다 작은 최대의 정수를 나타내어 준다.
==> 만약 정수가 들어온다면, 입력되어진 정수를 그대로 나타내어 준다.

2.11 ascii, chr

=================================================================

[ 날짜 함수 ]

** to_char 는 변환함수이다. 
** to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss')
** 날짜를 '년년년년-월월-일일 24시간체제 - 분분 - 초초' 로 본다는 것이다.

** alias 에 첫 글자가 숫자가 들어올 순 없다.
** 첫 글자를 숫자로 쓰고 싶다면 반드시 쌍따옴표를 해야한다.
** 중간에 띄어쓰기도 넣고싶다면 쌍따옴표를 해야한다.

3.1 add_months(날짜, 숫자)

3.2 months_between(날짜1, 날짜2)

3.3 last_day(특정날짜)

** to_date('2021-02-01', 'yyyy-mm-dd') : 문자열을 날짜형식으로 바꿔준다.

3.4 next_day(특정날짜, '일')  특정날짜로 부터 다음번에 돌아오는 가장 빠른 요일의 날짜를 알려준다.

3.5 extract
==> extract(year from sysdate) 년도만 뽑는다.
** to_char는 10보다 작으면 항상 앞에 0을 동반하지만,
** extract는 숫자형으로 반환해서 앞에 0이 안 붙는다.

3.6 to_yminterval, to_dsinterval 
==>yminterval 은 년 , 월
==> dsinterval 은 일 , 시간, 분, 초

==> 더하고 싶지 않아도, 00을 꼭 써줘야한다.

=================================================================

[ 변환 함수 ]

4.1 to_char(문자, '형태')

--- 날짜를 문자형태로 변환하기 ---

** 운영체제에 따라서 'day'와 'dy'는 다르게 나오기 때문에 ,호환성을 위하여 'd'를 쓴다.
==> 'day' 와 'dy' 는 Windows는 '월요일', '월' 로 나오지만, Linux는 'Monday', 'Mon'으로 나온다.
==> 'd' 는 똑같이 그 주의 요일 값으로 나오기때문에 case 문을 쓴다.
==> 일(1) ~ 토(7)

==> d는 그 주의 며칠째인지 (일요일은 1)
==> dd는 그 달의 며칠째인지
==> ddd는 그 년도의 며칠째인지

==> sssss는 0시 0분 0초 부터 지금시각까지 흘러간 초를 보여준다.

=================================================================

--- 숫자를 문자형태로 변환하기 ---

원화 표기는 'L'이다. -- 대문자 L은 그 나라의 화폐기호이다.

to_char(100,'999.0')
소수부가 없어도 .0이 나온다.

=================================================================

4.2 to_date(문자, '형태')

'2021-07-19' + 1 문자에는 사칙연산을 할 수 없다.
** 허나, 문자가 달력에 없는 날짜면 날짜형으로 변환할 수 없다.

=================================================================
4.3 to_number(문자)

원래는 to_number('50') + 10 을 해줘야 하나,
'50' + 10 을 해도 자동형변환이 되어서 더해진다.

=================================================================

[ 기타 함수 ]

5.3 greatest, least
greatest - 나열되어진것들 중에 제일 큰값을 알려주는 것
least - 나열되어진것들 중에 제일 작은값을 알려주는 것

** 숫자, 문자, 날짜 모두 가능하다.
=================================================================
5.4 rank, dense_rank
★ 등수구하기는 자주 쓰니 외울것

rank() over(order by 값 정렬)
==> over 는 어떤 값에 대한 등수냐? 를 지정해준다.

==> rank는 중복순위 부여하고, 다음 순위는 중복순위 부여한 만큼 값이 건너뛰어진다.
==> dense_rank는 중복순위 부여하고, 다음 순위는 중복순위 부여한 것과 상관없이 순차적 값을 부여한다.
==> 월급은 전체에서 몇등이고~, 월급액은 몇번째로 크다.

partition by 부서별로~ 
(반 별 석차를 구할 때 처럼, 부서별로 월급의 등수를 구한다)

=================================================================

07월 19일 오후수업

5.5 lag, lead
==> 게시판에서 특정글을 조회할때 사용한다.

lag(boardno, 1) over(order by boardno asc)       AS 이전글번호 ==> 글번호를 오름차순 정렬했을 때, 한 칸 위로 올라가서 글번호를 가져와라
lag(subject, 1) over(order by boardno asc)       AS 이전글제목 ==> 글번호를 오름차순 정렬했을때, 한 칸 위로 올라가서 글제목을 가져와라

** lag : 위로 올라가라 (이전꺼)
** lead : 아래로 내려가라 (다음꺼)

lead(boardno,1) over(order by boardno asc)        AS 다음글번호 => 글 번호를 오름차순 정렬했을때, 한 칸 밑에 있는 글번호를 가져와라
lead(subject,1) over(order by boardno asc)        AS 다음글제목=> 글 번호를 오름차순 정렬했을때, 한 칸 밑에 있는 글제목을 가져와라

>> lag와 lead는 숫자를 지정안하면 기본값으로 1이 지정된다.

=================================================================


[ 뷰 ]

select count(*)
from tbl_members;
>> 나온 행의 개수를 표시해준다.

** alias 는 영어로만 쓴다. 한글은 잘 사용 안 한다.

★★★★★ inline view, stored view 

뷰란?)
임의로 설정한 select 문을 마치 테이블처럼 보는 것이다. ( 원래있는 테이블을 임의의 조건으로 추출한 select 문을 테이블처럼~ )
==> 저장해야할 필요성이 있다, 매 번 꺼내봐야 할 쿼리문을 stored view로 저장해서 보는 것이다.
==> inline view 는 한 번만 볼 것일 때 쓴다.
★ rank( ) 는 그냥 select 문의 where 에선 쓸 수 없고, view 로 만들고 나서 쓸 수 있다.
==> 분석함수등에 사용되는 over()절은 where 구문에서 사용할 수 없다.
==> where 절은 from 절에 있는 칼럼은 인식할 수 있지만, select 절에서 만든 칼럼은 인식할 수 없다.


=================================================================

해당 사원의 나이가 63세가 되는 연도를 구해야 한다.

-- 어떤 사원의 현재 나이가 62 세 ==> 63세가 되는 년도     add_months(sysdate, (63-62)년)   add_months(sysdate, (1)년)  add_months(sysdate, (1*12)년)
-- 어떤 사원의 현재 나이가 37 세 ==> 63세가 되는 년도     add_months(sysdate, (63-37)년)   add_months(sysdate, (26)년) add_months(sysdate, (26*12)년)
-- 어떤 사원의 현재 나이가 57 세 ==> 63세가 되는 년도     add_months(sysdate, (63-57)년)   add_months(sysdate, (6)년)  add_months(sysdate, (6*12)년)


★ 원래 employees 테이블에는 현재나이 필드는 없기 때문에 만들었던 것을 테이블로 보기위해서 inlineview로 선언한다.

