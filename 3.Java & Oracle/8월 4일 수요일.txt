08월 04일 오전수업

[ 자바를 이용해 DDL, DML, DQL 하기 ] 

▶ 자바를 이용하여 create table jdbc_tbl_examtest, create sequence jdbc_seq_examtest 만들기
- 만약 동일한 이름의 테이블과 시퀀스가 존재한다면 먼저 drop을하고 create를 할 것이다.
- 먼저 동일한 이름의 테이블과 시퀀스가 존재하는지 파악한다.

DML문은 executeUpdate( ); 를 하면 적용된 행의 갯수만큼 리턴이 된다.
DDL문은 executeUpdate( ); 를 하면 항상 리턴되는 int는 0 이다.

==================================================================

[ 자바를 이용해 오라클 Exception 처리하기 ] 

▶ 자바를 이용하여 insert 시 제약조건(check, foreign key)에 의하여 일어나는 exception 처리하기
-- insert하려는 값이 foreign key 제약조건을 위배했다면 SQLException을 유발시킨다.


-- 'e.getErrorCode()'는 발생되어진 에러코드를 가져온다.
-- 'e.getErrorCode() == 특정 에러코드' 를 이용하여 특정한 에러코드가 발생 시 익셉션처리에서 특정 명령문이 실행되도록 한다.

(예시)
catch (SQLException e) {
			
   if(e.getErrorCode() == 2291) { 
   System.out.println("\n>> 학급번호  "+ n_fk_classno + " 은 우리학교에 존재하지 않는 학급번호 입   니다. 학급번호를 올바르게 입력하세요!! <<\n");
   }
   else {
   System.out.println(">> SQL구문 오류!! <<");
   e.printStackTrace();
   }
			
}

==================================================================

[ 자바를 이용해 오라클 프로시저 호출하기 ] 

일반적인 insert문은 오라클이 내부적으로 SQL문에 쓰여진 '테이블'이 있는지 파악을 하고, 그 테이블에 서술한 '컬럼'들이 있는지 확인을 한다.
==> 시퀀스도 있는지 없는지 알아본다.
==> Foreign Key도 위배가 됐나 안됐나 조회해본다.
==> 조회로 인하여 속도가 조금 느리다.

허나, 우리는 어차피 insert문에 써진 테이블과 컬럼이 있는 것을 이미 알고있다.

그래서 오라클이 내부적으로 검사하는 속도를 줄이고 빨리 실행문을 실행시키려 '프로시저'를 사용한다.
==> 프로시저를 만들 때 딱 한 번만 검사를 한다.
==> 그 이후에는 검사할 필요가없음을 오라클에 알려줘서 명령만 딱 실행하게 한다.
==> 그래서 속도가 조금 더 빠르다.

==================================================================

★ 오라클에서 먼저 프로시저를 만들고 자바에서 사용해야 한다.

★ 그 전까지는 PreparedStatement 를 사용했으나, 프로시저는 CallableStatement 를 사용한다.
==> CallableStatement cstmt 은 Connection conn(특정 오라클 서버)에 존재하는 Procedure 를 호출할 객체(우편배달부)이다.  

* 자원반납은 항상 역순이다. CallableStatement -> Connection 순으로 .close( )

프로시저 호출은 다음과 같이 한다.

cstmt = conn.prepareCall("{call pcd_student_insert(?,?,?,?)}");
==> 리턴타입은 CallableStatement이다.
==> 프로시저 파라미터 개수만큼 위치홀더를 써준다.
==> 위치홀더에 값을 넣어줄 때는 cstmt.setXXX( ) 메소드를 사용한다.

★ PreparedStatement 는 sql을 전달해주고,
★  CallableStatement 는 프로시저를 가져와 준다.

cstmt.execute( ); 
==> 오라클 서버에게 해당 프로시저를 실행하라는 것이다.
== cstmt.executeUpdate( ); 도 똑같다.


프로시저에서 학번은 자바를 통해 입력받아서 그 학번에 맞는 학생들을 조회하는거여서 IN 모드지만,
그 학생의 이름 등 정보는 자바로 보내서 출력해야하기 때문에 OUT 모드를 써야한다.
==> 오라클 내에서 출력할거면 실행부에 dbms_output.put_line을 쓴다.
==> select 되어진 결과물을 INTO로 OUT 모드 파라미터에 담아주면 자바에서 쓸 수 있다.

==================================================================

08월 04일 오후수업

* OUT 모드의 매개변수도 위치홀더를 준다.

IN 모드는 SETXXX( ) 로 위치홀더에 값을 넣어주고,
OUT 모드는 registerOutParameter( ) 로 위치홀더의 값을 받아온다.
==> 오라클의 데이터타입(varchar...)들을 자바에서 인식하는 타입(String)으로 바꿔서 가져와준다.
==> cstmt.registerOutParameter(2, java.sql.Types.VARCHAR);

==================================================================

[ 프로시저로 여러 개의 행을 가진 select 가져오기 ]

* 프로시저를 호출해서 복수개의 select 값을 가져오는 것은 ResultSet으로 가져오는게 아니기 때문에 오라클에서 복수 개를 담아오도록 처리해야 한다.

★ inline view를 이용해서 찾을 지역명에 해당하는 학생들만 뽑은 다음에 JOIN을 시켜서 원하는 컬럼들이 나오게 한다.

서울에 사는 사람만 거르고 ==> 거기에 JOIN해서 반 이름, 선생님 이름 도 JOIN해준다.


※ 자바와 붙이는 커서는 좀 특이한 형식을 가지고 있다.
변수선언 : o_data   out    SYS_REFCURSOR

- 커서 선언 

OPEN 커서명 FOR
SELECT문;


※ 일반 커서의 선언

OPEN 커서명 
IS
SELECT문;

==> 프로시저로 여러 행의 결과값을 가져오는 것은 실행되고선 변수에는 마지막 값만 담겨지기 때문에 복수 개를 담는 변수를 만들어야 한다. 그 후에 ResultSet으로 강제형변환해서 반복문으로 한 행씩 찍어준다.
==> 그냥 select도 통짜로 rs에 넣은 다음에 반복문으로 한 행씩 찍는다.


※ 자바와 붙이는 커서의 타입은 oracle.jdbc.OracleTypes 에 있다.
cstmt.registerOutParameter(2, oracle.jdbc.OracleTypes.CURSOR);
==> 일반형은 java.sql.types에 있다.

★ 프로시저를 자바에서 호출하려면 일단 오라클에서 먼저 만들어야 한다.

통짜로 있던 o_date를 ==> ResultSet으로 바꾸고 ==> 한 행씩 찍어준다.
==> 커서는 자바에서 바꿀만한 타입이 없으므로 일단 Object로 받아온 다음에 
==> ResultSet으로 바꿔준다.

==================================================================

** e.getMessage(); ==> 에러메시지를 가져온다.

ORA-20003: 영업시간(월~금 14:00 ~ 16:59:59 까지) 아니므로 입력불가함!!
 [ 에러코드 ]  |  [ 에러 메시지 ]------------------------------------------->
getErrorCode( )  | getMessage( )

에러코드를 확인해서 getErrorCode로 해당 에러코드에 맞게 익셉션처리를 할 수 있다.
오라클에서 사용자정의 익셉션처리를 할 수 있다.

==================================================================

회원탈퇴는 2가지가 있다.
1. delete
2. update로 status 를 0으로 바꿔서 처리
※ 가입상태 1, 탈퇴상태 0


내일 : DAO, DTO, 콘솔기반 게시판, MINI 프로젝트(도서대여 관리 프로그램)


