08월 10일 오전수업

- 대여 히스토리
- 2교시만 하고 11시에 카메라찍고, 미니프로젝트
- exerd 점검
- 오늘은 7~8조부터 봄 

==============================================================================

[ 글목록보기 - 댓글표시 ]

글제목에 해당글에 달린 댓글의 갯수를 나타낸다.

글목록보기 JOIN 댓글테이블(글번호 그룹 count)

==============================================================================

[ 글내용보기 - 댓글표시 ]

해당 글에 달린 댓글 표시하기

댓글은 복수개일 수 있으니 메소드는 list로 받는다.

메소드 파라미터) 
스캐너 - 몇번 글에 대한 댓글인지 where 조건절에 넣을 매개변수를 받아야 해서

select *
from jdbc_comment
where fk_boardno = ? ;

글 내용보기를 하려면 스캐너로 사용자가 글번호를 선택하기 때문에 그걸 파라미터로 같이 보내주면 그 글내용보기 + 글에 달린 댓글을 같이 가져오게 할 수 있다.

메소드 리턴타입)
댓글이 여러 개 있을 수 있다. 그래서 리스트 타입으로 받는다.


select C.contents, M.name, C.writeday
from
(
select contents
    ,  to_char(writeday, 'yyyy-mm-dd hh24:mi:ss') AS writeday
    ,  fk_userid
from jdbc_comment
where fk_boardno = 5
) C JOIN jdbc_member M
on C.fk_userid = M.userid;


먼저 해당 글 번호의 댓글만 뽑아온 다음에 inline view로 바꿔서 jdbc_member와 JOIN하고 댓글내용, 작성자명, 작성일자만 뽑아온다.

★ BoardCommentDTO에는 작성자명을 받아줄 setter(필드) 가 없기 때문에 select용으로 MemberDTO 필드를 만들어야 하낟.

select 되어져 나온 이름을 먼저 MemberDTO member에 setName()으로 넣어주고, 그 member를 BoardCommentDTO에 넣어준다.


if(cnt == 1) { // 딱 한 번만 만들게 해준다.
   commentList = new ArrayList<BoardCommentDTO>();
}
commentList.add(cmdto); << 마지막에는 모든 댓글 행들을 다 넣어준다.

==============================================================================

[미니프로젝트]

※ 대여 이력

대출(대여) ------------------------    대출상세(대여상세)
    1                     :                         多

-----> 반납 ( 대출 및 대출상세 테이블에 insert 되어진 행을 delete )


------ 지금까지 가장 많이 대출(대여)해간 도서 1등 부터 10등 까지 조회하고자 한다. ------
		         rank() over(order by ... )


대출(대여)_기록  대출상세(대여상세)_기록	history
>> 미반납된 데이터만 남고, 반납이 되면 사라지기 때문에 랭크를 구할 수 없다.

-- 반납 ( 대출 및 대출상세 테이블에 insert 되어진 행을 delete ) 되어진 정보를 
대출(대여)_기록  대출상세(대여상세)_기록 에 insert 해준다.


대출(대여), 대출상세(대여상세)에는 현재 대여정보
대출(대여)_기록, 대출상세(대여상세)_기록에는 예전 대여정보가 있으니, UNION으로 합쳐서 sum, group by를 이용해서 베스트샐러를 구한다.

==============================================================================

[ 테이블 목록 ]

LEND_DETAIL		==> 대여상세테이블
LEND_DETAIL_HISTORY	==> 대출상세_기록
TBL_ADMIN		==> 관리자
TBL_BOOK		==> 도서상세정보
TBL_COUNTRY 		==> 국가코드
TBL_GENRE		==> 중분류 장르
TBL_LEND			==> 대여
TBL_LEND_HISTORY		==> 대여_기록
TBL_LIB			==> 도서
TBL_MEMBER		==> 회원
TBL_SUB_CODE		==> 소분류코드
TBL_YEONCHE		==> 연체


▶ 대출_기록, 대출상세_기록 만들기 (完)
▶ 외국도서 자료 엑셀로 구해놓기

관리자 - 전체도서조회, 대여도서조회(完)

회원 - 회원가입(insert), 회원로그인(select), 로그인(member = null), 내 정보(select)
도서검색 -> 도서메뉴(1. 책 이름 검색, 2. 작가 이름 검색, 3. 출판사 검색, 4. 장르 검색)

================================
대출에는 대출번호가 시퀀스로 한 번만 들어간다 

근데 대출상세에는 같은 대출번호로 여러번 들어가야 한다.

select 대출시퀀스명.nextval AS 대출시퀀스명
from dual;

--> 채번한다

>> 시퀀스를 따와서

rs.next();

int seq = rs.getInt(1);
>> 이 결과값을 대출과 대출상세에 동시에 insert into values로 넣는다.

================================

[관리자 메뉴]

完 ---> 관리자 로그인, 로그아웃, 도서 등록, 전체 도서 조회, 대여 도서 조회, 뒤로가기 

미완성 --> 도서 대여해주기, 연체 회원 조회, 도서 정보 변경

[회원 메뉴]

完 ---> 회원가입, 회원 로그인, 로그아웃, 내 정보(정보수정), 뒤로가기, 도서 검색

미완성 --> 도서 대여하기, 도서 반납하기, 나의 대여 현황, 이 달의 추천 도서